# SPDX-License-Identifier: GPL-2.0-or-later
# The Original Code is Copyright (C) 2018 Kévin Dietrich.

add_compile_options(-fconcepts)
add_compile_options(-march=native)

if(CMAKE_BUILD_TYPE MATCHES "Debug")
    add_compile_options(-g)
    add_compile_options(-Og)
    add_compile_options(-Wall)
    add_compile_options(-Wextra)
    add_compile_options(-Werror)
    # Standard
    add_compile_options(-Wpedantic)
    add_compile_options(-Weffc++)
    # Déclaration de paramètres
    add_compile_options(-Wshadow)
    add_compile_options(-Wno-unused-parameter)
    add_compile_options(-Wunused)
    # Transtypage
    add_compile_options(-Wold-style-cast)
    add_compile_options(-Wcast-align)
    add_compile_options(-Wconversion)
    add_compile_options(-Wsign-conversion)
    add_compile_options(-Wdouble-promotion)
    add_compile_options(-Wuseless-cast)
    # Orientation objet
    add_compile_options(-Wnon-virtual-dtor)
    add_compile_options(-Woverloaded-virtual)
    add_compile_options(-Wno-delete-non-virtual-dtor)
    # Désactive certaines erreurs
    add_compile_options(-Wno-error=unused-function)
    add_compile_options(-Wno-error=class-memaccess)
    add_compile_options(-Wno-error=unused-result)
    add_compile_options(-Wno-error=clobbered)
    add_compile_options(-Wno-error=unused-local-typedefs)
    # Format
    add_compile_options(-Wformat=2)
    add_compile_options(-Wno-format-nonliteral)
    add_compile_options(-Wno-format-y2k)
    add_compile_options(-Wmissing-format-attribute)
    add_compile_options(-Wformat-extra-args)
    # Pointeurs
    add_compile_options(-Wnonnull)
    add_compile_options(-Wnull-dereference)
    # Conditions
    add_compile_options(-Wduplicated-cond)
    #add_compile_options(-Wduplicated-branches)
    add_compile_options(-Wno-error=duplicated-branches)
    # Operations
    add_compile_options(-Wlogical-op)
    # Autres
    #add_compile_options(-Wlifetime) non-supporté
    add_compile_options(-Wno-ignored-qualifiers)
    add_compile_options(-Wno-unknown-pragmas)
    add_compile_options(-Wno-missing-field-initializers)
    add_compile_options(-Wno-sign-compare)
    add_compile_options(-Wno-type-limits)
    add_compile_options(-fno-common)
    add_compile_options(-Wundef)
    add_compile_options(-Wno-div-by-zero)
    add_compile_options(-Wstrict-aliasing=2)
    add_compile_options(-Wsizeof-pointer-memaccess)
    add_compile_options(-fstrict-overflow)
    add_compile_options(-Wstrict-overflow=2)
    add_compile_options(-Wwrite-strings)
    add_compile_options(-fno-omit-frame-pointer)
    add_compile_options(-fstack-protector-all)
    add_compile_options(--param=ssp-buffer-size=4)
    add_compile_options(-Wno-maybe-uninitialized)
    add_compile_options(-Wmissing-include-dirs)
    add_compile_options(-Wdate-time)
    add_compile_options(-Wuninitialized)
    add_compile_options(-Winit-self)
    add_compile_options(-Wtype-limits)
    add_compile_options(-fno-nonansi-builtins)
    add_compile_options(-Warray-bounds)
    add_compile_options(-fdiagnostics-color=always)
    add_compile_options(-fuse-ld=gold)
    add_compile_options(-Wno-error=deprecated-copy)
    add_compile_options(-Wno-error=invalid-offsetof)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -fuse-ld=gold")

    if (AVEC_ASAN)
        add_compile_options(-fsanitize=address)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address")
        set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -fsanitize=address")
    endif()

elseif(CMAKE_BUILD_TYPE MATCHES "Profile")
    add_compile_options(-g)
    add_compile_options(-pg)
    add_compile_options(-O2)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -pg")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pg")
    add_definitions(-DCMAKE_BUILD_TYPE_PROFILE)
elseif(CMAKE_BUILD_TYPE MATCHES "Coverage")
    add_compile_options(--coverage)
    add_compile_options(-ftest-coverage)
    add_compile_options(-fprofile-arcs)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lgcov --coverage")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -lgcov --coverage")
elseif(CMAKE_BUILD_TYPE MATCHES "Release")
    add_compile_options(-O3)
elseif(CMAKE_BUILD_TYPE MATCHES "TSan")
    add_compile_options(-g)
    add_compile_options(-fsanitize=thread)
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=thread -fuse-ld=gold")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -fsanitize=thread -fuse-ld=gold")
endif()

# Pour supprimer des drapeaux de compilation un peu trop stricts pour certaines
# bibliothèques externes.
macro(desactive_drapeaux_compilation cible)
    get_target_property(EXTLIB_COMPILE_FLAGS ${cible} COMPILE_OPTIONS)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wall)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wconversion)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wdeprecated)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Weffc++)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wextra)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wmissing-include-dirs)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-delete-non-virtual-dtor)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-error=class-memaccess)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-error=deprecated-copy)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wnon-virtual-dtor)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wold-style-cast)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Woverloaded-virtual)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wpedantic)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wshadow)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wshadow)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wsign-conversion)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wuseless-cast)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -fconcepts)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -fno-nonansi-builtins)
    set_target_properties(${cible} PROPERTIES COMPILE_OPTIONS "${EXTLIB_COMPILE_FLAGS}")
endmacro()

# Pour supprimer des drapeaux de compilation un peu trop stricts, ou réserver à
# C++, pour certaines bibliothèques externes écrites en C.
macro(desactive_drapeaux_compilation_c cible)
    get_target_property(EXTLIB_COMPILE_FLAGS ${cible} COMPILE_OPTIONS)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wconversion)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wdouble-promotion)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Weffc++)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Werror)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wimplicit-int)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-delete-non-virtual-dtor)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-error=class-memaccess)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-error=deprecated-copy)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-error=discarded-qualifiers)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-error=shadow)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wno-error=unused-variable)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wnon-virtual-dtor)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wold-style-cast)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Woverloaded-virtual)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wpedantic)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wshadow)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wsign-conversion)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wunused-variable)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -Wuseless-cast)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -fconcepts)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -fno-nonansi-builtins)
    set_target_properties(${cible} PROPERTIES COMPILE_OPTIONS "${EXTLIB_COMPILE_FLAGS}")
endmacro()

macro(desactive_drapeaux_compilation_pour_nvcc cible)
    get_target_property(EXTLIB_COMPILE_FLAGS ${cible} COMPILE_OPTIONS)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -O3)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -march=native)
    list(REMOVE_ITEM EXTLIB_COMPILE_FLAGS -fconcepts)
    set_target_properties(${cible} PROPERTIES COMPILE_OPTIONS "${EXTLIB_COMPILE_FLAGS}")
endmacro()
