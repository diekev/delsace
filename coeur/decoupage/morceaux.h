/*
 * ***** BEGIN GPL LICENSE BLOCK *****
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software  Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * The Original Code is Copyright (C) 2018 KÃ©vin Dietrich.
 * All rights reserved.
 *
 * ***** END GPL LICENSE BLOCK *****
 *
 */

#pragma once

#include <string>

struct DonneesMorceaux {
	std::string chaine;
	int identifiant;
};

enum {
	IDENTIFIANT_ARRETE,
	IDENTIFIANT_ASSOCIE,
	IDENTIFIANT_BOOLEEN,
	IDENTIFIANT_BOUCLE,
	IDENTIFIANT_CHAINE,
	IDENTIFIANT_CLASSE,
	IDENTIFIANT_CONSTANT,
	IDENTIFIANT_CONSTRUCTEUR,
	IDENTIFIANT_DE,
	IDENTIFIANT_DESTRUCTEUR,
	IDENTIFIANT_DECIMAL32,
	IDENTIFIANT_DECIMAL64,
	IDENTIFIANT_DEFAUT,
	IDENTIFIANT_ENTIER16,
	IDENTIFIANT_ENTIER16NS,
	IDENTIFIANT_ENTIER32,
	IDENTIFIANT_ENTIER32NS,
	IDENTIFIANT_ENTIER64,
	IDENTIFIANT_ENTIER64NS,
	IDENTIFIANT_ENTIER8,
	IDENTIFIANT_ENTIER8NS,
	IDENTIFIANT_ENUM,
	IDENTIFIANT_EXPRIME,
	IDENTIFIANT_FAUX,
	IDENTIFIANT_FONCTION,
	IDENTIFIANT_GABARIT,
	IDENTIFIANT_IMPORTE,
	IDENTIFIANT_IMPRIME,
	IDENTIFIANT_INDEX,
	IDENTIFIANT_OPERATEUR,
	IDENTIFIANT_RETOURNE,
	IDENTIFIANT_SI,
	IDENTIFIANT_SINON,
	IDENTIFIANT_SOIT,
	IDENTIFIANT_SORTIE,
	IDENTIFIANT_VRAI,
	IDENTIFIANT_ECHEC,
	IDENTIFIANT_EXCLAMATION,
	IDENTIFIANT_GUILLEMET,
	IDENTIFIANT_DIESE,
	IDENTIFIANT_POURCENT,
	IDENTIFIANT_ESPERLUETTE,
	IDENTIFIANT_APOSTROPHE,
	IDENTIFIANT_PARENTHESE_OUVRANTE,
	IDENTIFIANT_PARENTHESE_FERMANTE,
	IDENTIFIANT_FOIS,
	IDENTIFIANT_PLUS,
	IDENTIFIANT_VIRGULE,
	IDENTIFIANT_MOINS,
	IDENTIFIANT_POINT,
	IDENTIFIANT_DIVISE,
	IDENTIFIANT_DOUBLE_POINT,
	IDENTIFIANT_POINT_VIRGULE,
	IDENTIFIANT_INFERIEUR,
	IDENTIFIANT_EGAL,
	IDENTIFIANT_SUPERIEUR,
	IDENTIFIANT_CROCHET_OUVRANT,
	IDENTIFIANT_CROCHET_FERMANT,
	IDENTIFIANT_CHAPEAU,
	IDENTIFIANT_ACCOLADE_OUVRANTE,
	IDENTIFIANT_BARRE,
	IDENTIFIANT_ACCOLADE_FERMANTE,
	IDENTIFIANT_DIFFERENCE,
	IDENTIFIANT_ESP_ESP,
	IDENTIFIANT_ET_EGAL,
	IDENTIFIANT_FOIS_EGAL,
	IDENTIFIANT_PLUS_PLUS,
	IDENTIFIANT_PLUS_EGAL,
	IDENTIFIANT_MOINS_MOINS,
	IDENTIFIANT_MOINS_EGAL,
	IDENTIFIANT_FLECHE,
	IDENTIFIANT_TROIS_POINT,
	IDENTIFIANT_DIVISE_EGAL,
	IDENTIFIANT_DECALAGE_GAUCHE,
	IDENTIFIANT_INFERIEUR_EGAL,
	IDENTIFIANT_EGALITE,
	IDENTIFIANT_SUPERIEUR_EGAL,
	IDENTIFIANT_DECALAGE_DROITE,
	IDENTIFIANT_OUX_EGAL,
	IDENTIFIANT_OU_EGAL,
	IDENTIFIANT_BARE_BARRE,
	IDENTIFIANT_CHAINE_CARACTERE,
	IDENTIFIANT_CHAINE_LITTERALE,
	IDENTIFIANT_CARACTERE,
	IDENTIFIANT_NOMBRE_ENTIER,
	IDENTIFIANT_NOMBRE_DECIMAL,
	IDENTIFIANT_NOMBRE_BINAIRE,
	IDENTIFIANT_NOMBRE_OCTAL,
	IDENTIFIANT_NOMBRE_HEXADECIMAL,
	IDENTIFIANT_NUL,
};

const char *chaine_identifiant(int identifiant);
