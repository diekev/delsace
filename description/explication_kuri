énum (: type) {
	VALEUR (= NOMBRE_ENTIER, CHAINE),
}


struct DonneesFonction {
	std::set<std::string> params;
	std::set<std::string> variables;
};

struct DonneesProgramme {
	/* les constantes contiennent les 'constante' ainsi que les 'énum' */
	std::set<std::string> constantes;
	std::set<std::string> fonctions;
};

// mot-clé

types :
-- e8  : représente un nombre entier représenté sur 8-bit (1 octet) dont les valeurs vont de -128 à 127
-- e16 : représente un nombre entier représenté sur 16-bit (2 octets) dont les valeurs vont de -2^15 à 2^15 - 1
-- e32 : représente un nombre entier représenté sur 32-bit (4 octets) dont les valeurs vont de -2^31 à 2^31 - 1
-- e64 : représente un nombre entier représenté sur 64-bit (8 octets) dont les valeurs vont de -2^63 à 2^32 - 1

-- e8ns  : représente un nombre entier représenté sur 8-bit (1 octet) dont les valeurs vont de 0 à 255
-- e16ns : représente un nombre entier représenté sur 16-bit (2 octets) dont les valeurs vont de 0 à 65536
-- e32ns : représente un nombre entier représenté sur 32-bit (4 octets) dont les valeurs vont de 0 à 2^32
-- e64ns : représente un nombre entier représenté sur 64-bit (8 octets) dont les valeurs vont de 0 à 2^64

-- r16 : représente un nombre réel à virgule flottante représenté sur 16-bit (2 octets)
-- r32 : représente un nombre réel à virgule flottante représenté sur 32-bit (4 octets)
-- r64 : représente un nombre réel à virgule flottante représenté sur 64-bit (8 octets)

-- rien : représente l'absence de valeur (pour une fonction qui ne retourne rien)

-- bool : représente une valeur qui ne peux prendre que deux valeurs


instructions :
-- soit      : instruit la déclaration d'une variable
-- constante : instruit que la variable est une constante que personne ne peut changer
-- variable  : instruit que le paramètre peut changer
-- fonction  : instruit la déclaration d'une fonction
-- boucle    : instruit la création d'une boucle
-- pour      : instruit la création d'une boucle
-- dans      : instruit la définition d'une plage pour une boucle
-- associe   : instruit la comparaison de d'une valeur avec plusieurs autres
-- si        : instruit la création d'un contrôle de flux
-- sinon     : instruit la continuation d'un contrôle de flux
-- énum      : instruit la déclaration d'une suite d'énumération
-- structure : instruit la déclaration d'une structure de données
-- gabarit   : instruit que la fonction ou la structure est un gabarit
-- de        : instruit que l'on recherche une propriété d'une structure de données
-- retourne  : instruit que l'on retourne d'une fonction
-- défère    : instruit que l'expression suivante doit être exécuté à la fin de la portée
-- transtype : instruit que l'on modifie le type d'une variable


valeurs :
-- vrai : représente l'état d'un bool
-- faux : représente l'état d'un bool


caractères :
-- ( : démarre une liste de paramètres
-- ) : termine une liste de paramètres
-- { : démarre une portée
-- } : termine une portée
-- [ : démarre un tableau
-- ] : termine un tableau
-- : : démarre la déclaration d'un type
-- # : démarre un commentaire


opérateurs :
+
-
*
/
@
%
!
==
!=
<
<=
>
>=
=
