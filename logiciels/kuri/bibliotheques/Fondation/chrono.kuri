// Bibliothèque de chronométrage.
// À FAIRE : regarde les bibliothèques de temps/date des différents langages

importe GlibC

fonc maintenant_sec() -> r64
{
	dyn heure : timeval
	gettimeofday(@heure, nul)

	s := transtype(heure.tv_sec : r64)

    // À FAIRE : 1e-6
	retourne s + transtype(heure.tv_usec : r64) * 0.000001
}

fonc maintenant_local() -> r64
{
	dyn heure : timeval
	dyn fuseau : timezone
	gettimeofday(@heure, @fuseau)

	dyn s := transtype(heure.tv_sec : r64)
	s += transtype(fuseau.tz_minuteswest : r64) * 60.0

    // À FAIRE : 1e-6
	retourne s + transtype(heure.tv_usec : r64) * 0.000001
}

fonc delta_sec(temps : r64) -> r64
{
	retourne maintenant_sec() - temps
}

fonc compte_ticks_ms() -> z64
{
	dyn heure : timeval
	gettimeofday(@heure, nul)
	retourne heure.tv_sec * 1000 + heure.tv_usec / 1000
}

struct DonnéesTemps {
	heures : z32
	minutes : z32
	secondes : z32
}

fonc calcule_temps() -> DonnéesTemps
{
	dyn maint := maintenant_local()

	dyn dt : DonnéesTemps
	dt.minutes = transtype(maint / 60.0 : z32) % 60
	dt.heures = transtype(maint / 60.0 / 60.0 : z32) % 24
	dt.secondes = transtype(maint : z32) % 60

	retourne dt
}
