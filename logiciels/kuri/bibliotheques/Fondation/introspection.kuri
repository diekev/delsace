// Bibliothèque d'introspection.

charge "chaine"

possède_membre :: fonc(arg : eini, nom : chaine) -> bool
{
	info := arg.info

    si info.id != id_info.STRUCTURE {
		retourne faux
	}

	info_arg := transtype(info : *InfoTypeStructure)

    pour membre dans info_arg.membres {
        si membre.nom == nom {
			retourne vrai
        }
    }

	retourne faux
}

membres :: corout(arg : eini) -> chaine
{
	info := arg.info

    si info.id != id_info.STRUCTURE {
		retourne
	}

	info_arg := transtype(info : *InfoTypeStructure)

    pour membre dans info_arg.membres {
		retiens membre.nom
	}
}
