# Bibliothèque d'introspection.

charge "chaine"

fonc possède_membre(arg : eini, nom : chaine) : bool
{
	info = info de arg

    si id de info != STRUCTURE de id_info {
		retourne faux
	}

	soit info_arg = transtype(info : *InfoTypeStructure)

	soit membres = membres de info_arg

    pour membre dans membres {
        si compare_chaines(nom de membre, nom) {
			retourne vrai
        }
    }

	retourne faux
}

corout membres(arg : eini) : chaine
{
	info = info de arg

    si id de info != STRUCTURE de id_info {
		retourne
	}

	info_arg = transtype(info : *InfoTypeStructure)

	membres = membres de info_arg

    pour membre dans membres {
		retiens nom de membre
	}
}
