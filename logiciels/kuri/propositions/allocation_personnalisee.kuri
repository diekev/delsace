énum ModeAllocateur : z32 {
	ALLOUE,
	DÉSALLOUE,
	RÉALLOUE,
}

struct EndroitSource {
	fichier : chaine
	fonction : chaine
	ligne : z32
	colonne : z32
}

fonc fonction_allocation(
	mode : ModeAllocateur,
	nouvelle_taille : z64,
	vielle_taille : z64,
	vieux_pointeur : *rien,
	données_allocateur : *rien,
	options : z64,
	info : *InfoType,
	source : EndroitSource
	) : *rien;

fonc allocation_système(
	mode : ModeAllocateur,
	nouvelle_taille : z64,
	vielle_taille : z64,
	vieux_pointeur : *rien,
	données_allocateur : *rien,
	options : z64,
	info : *InfoType,
	source : EndroitSource
	) : *rien
{
	discr mode {
		ModeAllocateur.ALLOUE {
			retourne malloc(nouvelle_taille)
		}
		ModeAllocateur.DÉSALLOUE {
			free(vieux_pointeur)
			retourne nul
		}
		ModeAllocateur.RÉALLOUE {
			retourne realloc(vieux_pointeur, nouvelle_taille)
		}
	}
}

fonc foo() : rien
{
	ctx.allocateur = allocation_système

	a = loge z32
	# a = ctx.allocateur(ModeAllocateur.ALLOUE, 4, 0, nul, 0, &__info_type_Ksz32, endroit_source)

}
