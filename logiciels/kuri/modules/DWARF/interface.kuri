importe Fondation
importe Introspection

UnitType :: énum n8 {
    compile :: 0x01
    type :: 0x02
    partial :: 0x03
    skeleton :: 0x04
    split_compile :: 0x05
    split_type :: 0x06
    lo_user :: 0x80
    hi_user :: 0xff
}

DW_UT_compile : n8 : 0x01
DW_UT_type : n8 : 0x02
DW_UT_partial : n8 : 0x03
DW_UT_skeleton : n8 : 0x04
DW_UT_split_compile : n8 : 0x05
DW_UT_split_type : n8 : 0x06
DW_UT_lo_user : n8 : 0x80
DW_UT_hi_user : n8 : 0xff

DW_TAG_array_type : n32 : 0x01
DW_TAG_class_type : n32 : 0x02
DW_TAG_entry_point : n32 : 0x03
DW_TAG_enumeration_type : n32 : 0x04
DW_TAG_formal_parameter : n32 : 0x05
// Reserved : n32 : 0x06
// Reserved : n32 : 0x07
DW_TAG_imported_declaration : n32 : 0x08
// Reserved : n32 : 0x09
DW_TAG_label : n32 : 0x0a
DW_TAG_lexical_block : n32 : 0x0b
// Reserved : n32 : 0x0c
DW_TAG_member : n32 : 0x0d
// Reserved : n32 : 0x0e
DW_TAG_pointer_type : n32 : 0x0f
DW_TAG_reference_type : n32 : 0x10
DW_TAG_compile_unit : n32 : 0x11
DW_TAG_string_type : n32 : 0x12
DW_TAG_structure_type : n32 : 0x13
// Reserved : n32 : 0x14
DW_TAG_subroutine_type : n32 : 0x15
DW_TAG_typedef : n32 : 0x16
DW_TAG_union_type : n32 : 0x17
DW_TAG_unspecified_parameters : n32 : 0x18
DW_TAG_variant : n32 : 0x19
DW_TAG_common_block : n32 : 0x1a
DW_TAG_common_inclusion : n32 : 0x1b
DW_TAG_inheritance : n32 : 0x1c
DW_TAG_inlined_subroutine : n32 : 0x1d
DW_TAG_module : n32 : 0x1e
DW_TAG_ptr_to_member_type : n32 : 0x1f
DW_TAG_set_type : n32 : 0x20
DW_TAG_subrange_type : n32 : 0x21
DW_TAG_with_stmt : n32 : 0x22
DW_TAG_access_declaration : n32 : 0x23
DW_TAG_base_type : n32 : 0x24
DW_TAG_catch_block : n32 : 0x25
DW_TAG_const_type : n32 : 0x26
DW_TAG_constant : n32 : 0x27
DW_TAG_enumerator : n32 : 0x28
DW_TAG_file_type : n32 : 0x29
DW_TAG_friend : n32 : 0x2a
DW_TAG_namelist : n32 : 0x2b
DW_TAG_namelist_item : n32 : 0x2c
DW_TAG_packed_type : n32 : 0x2d
DW_TAG_subprogram : n32 : 0x2e
DW_TAG_template_type_parameter : n32 : 0x2f
DW_TAG_template_value_parameter : n32 : 0x30
DW_TAG_thrown_type : n32 : 0x31
DW_TAG_try_block : n32 : 0x32
DW_TAG_variant_part : n32 : 0x33
DW_TAG_variable : n32 : 0x34
DW_TAG_volatile_type : n32 : 0x35
DW_TAG_dwarf_procedure : n32 : 0x36
DW_TAG_restrict_type : n32 : 0x37
DW_TAG_interface_type : n32 : 0x38
DW_TAG_namespace : n32 : 0x39
DW_TAG_imported_module : n32 : 0x3a
DW_TAG_unspecified_type : n32 : 0x3b
DW_TAG_partial_unit : n32 : 0x3c
DW_TAG_imported_unit : n32 : 0x3d
// Reserved : n32 : 0x3e
DW_TAG_condition : n32 : 0x3f
DW_TAG_shared_type : n32 : 0x40
DW_TAG_type_unit : n32 : 0x41
DW_TAG_rvalue_reference_type : n32 : 0x42
DW_TAG_template_alias : n32 : 0x43
DW_TAG_coarray_type : n32 : 0x44
DW_TAG_generic_subrange : n32 : 0x45
DW_TAG_dynamic_type : n32 : 0x46
DW_TAG_atomic_type : n32 : 0x47
DW_TAG_call_site : n32 : 0x48
DW_TAG_call_site_parameter : n32 : 0x49
DW_TAG_skeleton_unit : n32 : 0x4a
DW_TAG_immutable_type : n32 : 0x4b
DW_TAG_lo_user : n32 : 0x4080
DW_TAG_hi_user : n32 : 0xffff

donne_chaine_pour_tag_abbréviation :: fonc (tag: n64) -> chaine
#corps_texte {
    retourne corps_fonction_chaine_pour_constantes(#chemin_de_ce_fichier, "DW_TAG_array_type", "DW_TAG_", "tag", "DW_TAG_lo_user", "DW_TAG_hi_user")
}

DW_CHILDREN_no : n8 : 0x0
DW_CHILDREN_yes : n8 : 0x1

DW_AT_sibling : n32 : 0x01
DW_AT_location : n32 : 0x02
DW_AT_name : n32 : 0x03
// Reserved : n32 : 0x04
// Reserved : n32 : 0x05
// Reserved : n32 : 0x06
// Reserved : n32 : 0x07
// Reserved : n32 : 0x08
DW_AT_ordering : n32 : 0x09
// Reserved : n32 : 0x0a
DW_AT_byte_size : n32 : 0x0b
// Reserved : n32 : 0x0c
DW_AT_bit_size : n32 : 0x0d
// Reserved : n32 : 0x0e
// Reserved : n32 : 0x0f
DW_AT_stmt_list : n32 : 0x10
DW_AT_low_pc : n32 : 0x11
DW_AT_high_pc : n32 : 0x12
DW_AT_language : n32 : 0x13
// Reserved : n32 : 0x14
DW_AT_discr : n32 : 0x15
DW_AT_discr_value : n32 : 0x16
DW_AT_visibility : n32 : 0x17
DW_AT_import : n32 : 0x18
DW_AT_string_length : n32 : 0x19
DW_AT_common_reference : n32 : 0x1a
DW_AT_comp_dir : n32 : 0x1b
DW_AT_const_value : n32 : 0x1c
DW_AT_containing_type : n32 : 0x1d
DW_AT_default_value : n32 : 0x1e
// Reserved : n32 : 0x1f
DW_AT_inline : n32 : 0x20
DW_AT_is_optional : n32 : 0x21
DW_AT_lower_bound : n32 : 0x22
// Reserved : n32 : 0x23
// Reserved : n32 : 0x24
DW_AT_producer : n32 : 0x25
// Reserved : n32 : 0x26
DW_AT_prototyped : n32 : 0x27
// Reserved : n32 : 0x28
// Reserved : n32 : 0x29
DW_AT_return_addr : n32 : 0x2a
// Reserved : n32 : 0x2b
DW_AT_start_scope : n32 : 0x2c
// Reserved : n32 : 0x2d
DW_AT_bit_stride : n32 : 0x2e
DW_AT_upper_bound : n32 : 0x2f
// Reserved : n32 : 0x30
DW_AT_abstract_origin : n32 : 0x31
DW_AT_accessibility : n32 : 0x32
DW_AT_address_class : n32 : 0x33
DW_AT_artificial : n32 : 0x34
DW_AT_base_types : n32 : 0x35
DW_AT_calling_convention : n32 : 0x36
DW_AT_count : n32 : 0x37
DW_AT_data_member_location : n32 : 0x38
DW_AT_decl_column : n32 : 0x39
DW_AT_decl_file : n32 : 0x3a
DW_AT_decl_line : n32 : 0x3b
DW_AT_declaration : n32 : 0x3c
DW_AT_discr_list : n32 : 0x3d
DW_AT_encoding : n32 : 0x3e
DW_AT_external : n32 : 0x3f
DW_AT_frame_base : n32 : 0x40
DW_AT_friend : n32 : 0x41
DW_AT_identifier_case : n32 : 0x42
// Reserved : n32 : 0x43
DW_AT_namelist_item : n32 : 0x44
DW_AT_priority : n32 : 0x45
DW_AT_segment : n32 : 0x46
DW_AT_specification : n32 : 0x47
DW_AT_static_link : n32 : 0x48
DW_AT_type : n32 : 0x49
DW_AT_use_location : n32 : 0x4a
DW_AT_variable_parameter : n32 : 0x4b
DW_AT_virtuality : n32 : 0x4c
DW_AT_vtable_elem_location : n32 : 0x4d
DW_AT_allocated : n32 : 0x4e
DW_AT_associated : n32 : 0x4f
DW_AT_data_location : n32 : 0x50
DW_AT_byte_stride : n32 : 0x51
DW_AT_entry_pc : n32 : 0x52
DW_AT_use_UTF8 : n32 : 0x53
DW_AT_extension : n32 : 0x54
DW_AT_ranges : n32 : 0x55
DW_AT_trampoline : n32 : 0x56
DW_AT_call_column : n32 : 0x57
DW_AT_call_file : n32 : 0x58
DW_AT_call_line : n32 : 0x59
DW_AT_description : n32 : 0x5a
DW_AT_binary_scale : n32 : 0x5b
DW_AT_decimal_scale : n32 : 0x5c
DW_AT_small : n32 : 0x5d
DW_AT_decimal_sign : n32 : 0x5e
DW_AT_digit_count : n32 : 0x5f
DW_AT_picture_string : n32 : 0x60
DW_AT_mutable : n32 : 0x61
DW_AT_threads_scaled : n32 : 0x62
DW_AT_explicit : n32 : 0x63
DW_AT_object_pointer : n32 : 0x64
DW_AT_endianity : n32 : 0x65
DW_AT_elemental : n32 : 0x66
DW_AT_pure : n32 : 0x67
DW_AT_recursive : n32 : 0x68
DW_AT_signature : n32 : 0x69
DW_AT_main_subprogram : n32 : 0x6a
DW_AT_data_bit_offset : n32 : 0x6b
DW_AT_const_expr : n32 : 0x6c
DW_AT_enum_class : n32 : 0x6d
DW_AT_linkage_name : n32 : 0x6e
DW_AT_string_length_bit_size : n32 : 0x6f
DW_AT_string_length_byte_size : n32 : 0x70
DW_AT_rank : n32 : 0x71
DW_AT_str_offsets_base : n32 : 0x72
DW_AT_addr_base : n32 : 0x73
DW_AT_rnglists_base : n32 : 0x74
// Reserved : n32 : 0x75
DW_AT_dwo_name : n32 : 0x76
DW_AT_reference : n32 : 0x77
DW_AT_rvalue_reference : n32 : 0x78
DW_AT_macros : n32 : 0x79
DW_AT_call_all_calls : n32 : 0x7a
DW_AT_call_all_source_calls : n32 : 0x7b
DW_AT_call_all_tail_calls : n32 : 0x7c
DW_AT_call_return_pc : n32 : 0x7d
DW_AT_call_value : n32 : 0x7e
DW_AT_call_origin : n32 : 0x7f
DW_AT_call_parameter : n32 : 0x80
DW_AT_call_pc : n32 : 0x81
DW_AT_call_tail_call : n32 : 0x82
DW_AT_call_target : n32 : 0x83
DW_AT_call_target_clobbered : n32 : 0x84
DW_AT_call_data_location : n32 : 0x85
DW_AT_call_data_value : n32 : 0x86
DW_AT_noreturn : n32 : 0x87
DW_AT_alignment : n32 : 0x88
DW_AT_export_symbols : n32 : 0x89
DW_AT_deleted : n32 : 0x8a
DW_AT_defaulted : n32 : 0x8b
DW_AT_loclists_base : n32 : 0x8c
DW_AT_lo_user : n32 : 0x2000
DW_AT_hi_user : n32 : 0x3fff

donne_chaine_pour_nom_attribut :: fonc (nom: n64) -> chaine
#corps_texte {
    retourne corps_fonction_chaine_pour_constantes(#chemin_de_ce_fichier, "DW_AT_sibling", "DW_AT_", "nom", "DW_AT_lo_user", "DW_AT_hi_user")
}

DW_FORM_addr : n32 : 0x01
// Reserved : n32 : 0x02
DW_FORM_block2 : n32 : 0x03
DW_FORM_block4 : n32 : 0x04
DW_FORM_data2 : n32 : 0x05
DW_FORM_data4 : n32 : 0x06
DW_FORM_data8 : n32 : 0x07
DW_FORM_string : n32 : 0x08
DW_FORM_block : n32 : 0x09
DW_FORM_block1 : n32 : 0x0a
DW_FORM_data1 : n32 : 0x0b
DW_FORM_flag : n32 : 0x0c
DW_FORM_sdata : n32 : 0x0d
DW_FORM_strp : n32 : 0x0e
DW_FORM_udata : n32 : 0x0f
DW_FORM_ref_addr : n32 : 0x10
DW_FORM_ref1 : n32 : 0x11
DW_FORM_ref2 : n32 : 0x12
DW_FORM_ref4 : n32 : 0x13
DW_FORM_ref8 : n32 : 0x14
DW_FORM_ref_udata : n32 : 0x15
DW_FORM_indirect : n32 : 0x16
DW_FORM_sec_offset : n32 : 0x17
DW_FORM_exprloc : n32 : 0x18
DW_FORM_flag_present : n32 : 0x19
DW_FORM_strx : n32 : 0x1a
DW_FORM_addrx : n32 : 0x1b
DW_FORM_ref_sup4 : n32 : 0x1c
DW_FORM_strp_sup : n32 : 0x1d
DW_FORM_data16 : n32 : 0x1e
DW_FORM_line_strp : n32 : 0x1f
DW_FORM_ref_sig8 : n32 : 0x20
DW_FORM_implicit_const : n32 : 0x21
DW_FORM_loclistx : n32 : 0x22
DW_FORM_rnglistx : n32 : 0x23
DW_FORM_ref_sup8 : n32 : 0x24
DW_FORM_strx1 : n32 : 0x25
DW_FORM_strx2 : n32 : 0x26
DW_FORM_strx3 : n32 : 0x27
DW_FORM_strx4 : n32 : 0x28
DW_FORM_addrx1 : n32 : 0x29
DW_FORM_addrx2 : n32 : 0x2a
DW_FORM_addrx3 : n32 : 0x2b
DW_FORM_addrx4 : n32 : 0x2c

donne_chaine_pour_forme_attribut :: fonc (forme: n64) -> chaine
#corps_texte {
    retourne corps_fonction_chaine_pour_constantes(#chemin_de_ce_fichier, "DW_FORM_addr", "DW_FORM_", "forme")
}

/* 7.7.3 Location Lists */
DW_LLE_end_of_list : n8 : 0x00
DW_LLE_base_addressx : n8 : 0x01
DW_LLE_startx_endx : n8 : 0x02
DW_LLE_startx_length : n8 : 0x03
DW_LLE_offset_pair : n8 : 0x04
DW_LLE_default_location : n8 : 0x05
DW_LLE_base_address : n8 : 0x06
DW_LLE_start_end : n8 : 0x07
DW_LLE_start_length : n8 : 0x08

donne_chaine_pour_entrée_location_list :: fonc (entrée: n8) -> chaine
#corps_texte {
    retourne corps_fonction_chaine_pour_constantes(#chemin_de_ce_fichier, "DW_LLE_end_of_list", "DW_LLE_", "entrée")
}

/* 7.25 Range List Entries for Non-contiguous Address Ranges */
DW_RLE_end_of_list : n8 : 0x00
DW_RLE_base_addressx : n8 : 0x01
DW_RLE_startx_endx : n8 : 0x02
DW_RLE_startx_length : n8 : 0x03
DW_RLE_offset_pair : n8 : 0x04
DW_RLE_base_address : n8 : 0x05
DW_RLE_start_end : n8 : 0x06
DW_RLE_start_length : n8 : 0x07

donne_chaine_pour_entrée_range_list :: fonc (entrée: n8) -> chaine
#corps_texte {
    retourne corps_fonction_chaine_pour_constantes(#chemin_de_ce_fichier, "DW_RLE_end_of_list", "DW_RLE_", "entrée")
}

DWARF64_UnitHeader :: struct {
    length: n64
    version: n16
    unit_type: n8
}

DWARF64_CompilationUnit :: struct {
    header: DWARF64_UnitHeader
    address_size: n8
    debug_abbrev_offset: n64
}
