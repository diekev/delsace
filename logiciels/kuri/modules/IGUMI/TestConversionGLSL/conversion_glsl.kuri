importe Compilatrice
importe Fondation
importe SysFichier
importe Transpilation

compile :: fonc ()
{
    désactive_compilation_espace_défaut()

    options := OptionsDeCompilation()
    espace := démarre_un_espace_de_travail("glsl", *options)

    compilatrice_commence_interception(espace)
    ajoute_fichier_à_la_compilation(espace, "fonctions_à_convertir.kuri")

    boucle {
        message := compilatrice_attend_message()
        diffère compilatrice_message_reçu(message)

        si message.espace != espace {
            continue
        }

        si message.genre == GenreMessage.TYPAGE_CODE_TERMINÉ {
            message_typage := message comme *MessageTypageCodeTerminé
            code := message_typage.code

            si code.genre == GenreNoeud.DECLARATION_CORPS_FONCTION {
                convertis_vers_glsl(espace, code comme *NoeudCodeCorpsFonction)
            }
        }

        si message.genre == GenreMessage.PHASE_COMPILATION {
            phase := message comme *MessagePhaseCompilation

            si phase.phase == PhaseCompilation.COMPILATION_TERMINÉE {
                arrête
            }
        }
    }

    compilatrice_termine_interception(espace)
}

// #exécute compile()
