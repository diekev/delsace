charge "interface_exétron"

// ------------------------------------------
// FilExecution

DonnéesCréationFil :: struct ($T: type_de_données) {
    rappel: fonc(*T)(rien)
    données: *T
}

__fonction_principale_exétron :: fonc (données_création_fil: *DonnéesCréationFil($T))
{
    données_création_fil.rappel(données_création_fil.données)
}

// À FAIRE(langage) : crash si le type polymorphique est déclaré dans le rappel
crée_fil_exécution :: fonc (rappel: fonc(*T)(rien), données: *$T) -> *FilExecution
{
    données_création_fil : DonnéesCréationFil(T) = ---
    données_création_fil.données = données
    données_création_fil.rappel = rappel
    retourne EXETRON_cree_fil(__fonction_principale_exétron, *données_création_fil)
}

join :: fonc (fil: *FilExecution) -> bool
{
    retourne EXETRON_joins_fil(fil)
}

détache :: fonc (fil: *FilExecution)
{
    EXTRONT_detache_fil(fil)
}

détruit :: fonc (fil: &*FilExecution)
{
    EXETRON_detruit_fil(fil)
    fil = nul
}

// ------------------------------------------
// Mutex

crée_mutex :: fonc () -> *Mutex
{
    retourne EXETRON_cree_mutex()
}

verrouille :: fonc (mutex: *Mutex)
{
    EXETRON_verrouille_mutex(mutex)
}

déverrouille :: fonc (mutex: *Mutex)
{
    EXETRON_deverrouille_mutex(mutex)
}

détruit :: fonc (mutex: &*Mutex)
{
    EXETRON_detruit_mutex(mutex)
    mutex = nul
}
