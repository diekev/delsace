importe SysFichier

/* ------------------------------------------------------------------------- */
/** \nom GlobalesDessin
 * \{ */

GlobalesDessin :: struct {
    /* Correspond à 1em. */
    taille_fonte_défaut := 16.0

    fonte_défaut_mono_grasse := "/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf"
    fonte_défaut_mono_italique_grasse := "/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf"
    fonte_défaut_mono_italique := "/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf"
    fonte_défaut_mono := "/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf"

    fonte_défaut_sans_grasse := "/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf"
    fonte_défaut_sans_italique_grasse := "/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf"
    fonte_défaut_sans_italique := "/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf"
    fonte_défaut_sans := "/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf"

    fonte_défaut_sans_narrow_grasse := "/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf"
    fonte_défaut_sans_narrow_italique_grasse := "/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf"
    fonte_défaut_sans_narrow_italique := "/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf"
    fonte_défaut_sans_narrow := "/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf"

    fonte_défaut_sérif_grasse := "/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf"
    fonte_défaut_sérif_italique_grasse := "/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf"
    fonte_défaut_sérif_italique := "/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf"
    fonte_défaut_sérif := "/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf"

    FonteEnCache :: struct {
        famille: chaine
        style: chaine
        graisse: GraisseFonte
        taille: r32
        fonte: *Fonte
    }

    fontes_en_cache: [..]FonteEnCache

    image_checkbox: NouvelleImage
}

données_image_checkbox := n8.[
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4,
    1, 1, 1, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
    40, 40, 40, 161, 42, 42, 42, 172, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 3, 35, 35, 35, 140, 59, 59, 59, 237, 10, 10, 10, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 105, 60, 60, 60, 245, 18, 18, 18, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41,
    41, 41, 167, 38, 38, 38, 153, 2, 2, 2, 8, 20, 20, 20, 80, 61, 61, 61, 246, 23, 23, 23, 95, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 49, 58, 58, 58, 235, 48, 48, 48, 192, 58, 58, 58, 234, 32, 32, 32,
    131, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 60, 59, 59, 59, 236,
    38, 38, 38, 152, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 7, 7, 7, 28, 3, 3, 3, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

crée_globales_dessin :: fonc () -> *GlobalesDessin
{
    résultat := loge(GlobalesDessin)

    résultat.image_checkbox.desc.hauteur = 10
    résultat.image_checkbox.desc.largeur = 10
    résultat.image_checkbox.desc.format = FormatPixel.RVBA_8
    résultat.image_checkbox.source_données = SourceDonnéesImage.Externe
    résultat.image_checkbox.données = *données_image_checkbox[0]

    retourne résultat
}

détruit_globales_dessin :: fonc (globales: *GlobalesDessin)
{
    saufsi globales {
        retourne
    }

    pour globales.fontes_en_cache {
        détruit_fonte(it.fonte)
    }

    déloge(globales.fontes_en_cache)
    déloge(globales)
}

GraisseFonte :: énum {
    Normal
    Gras
}

donne_fonte_défaut :: fonc (ctx: *GlobalesDessin) -> *Fonte
{
    retourne ctx.donne_fonte("sérif", "normal", GraisseFonte.Normal, ctx.taille_fonte_défaut)
}

donne_fonte :: fonc (ctx: *GlobalesDessin, famille: chaine, style: chaine, graisse: GraisseFonte, taille: r32) -> *Fonte
{
    existante := ctx.donne_fonte_en_cache(famille, style, graisse, taille)
    si existante {
        retourne existante
    }

    chemin := donne_chemin_fonte(ctx, famille, style, graisse)

    fonte := crée_fonte(CheminFichier(chemin), taille)
    saufsi fonte {
        retourne donne_fonte_défaut(ctx)
    }

    fonte_en_cache := GlobalesDessin.FonteEnCache(famille, style, graisse, taille, fonte)
    tableau_ajoute(*ctx.fontes_en_cache, fonte_en_cache)

    retourne fonte
}

donne_fonte_en_cache :: fonc (ctx: *GlobalesDessin, famille: chaine, style: chaine, graisse: GraisseFonte, taille: r32) -> *Fonte
{
    pour ctx.fontes_en_cache {
        si it.famille == famille && it.style == style && it.graisse == graisse && it.taille == taille {
            retourne it.fonte
        }
    }
    retourne nul
}

donne_chemin_fonte :: fonc (ctx: *GlobalesDessin, famille: chaine, style: chaine, graisse: GraisseFonte) -> chaine
{
    si famille == "sans-serif" {
        si style == "italic" {
            si graisse == GraisseFonte.Gras {
                retourne ctx.fonte_défaut_sans_italique_grasse
            }
            retourne ctx.fonte_défaut_sans_italique
        }

        si graisse == GraisseFonte.Gras {
            retourne ctx.fonte_défaut_sans_grasse
        }
        retourne ctx.fonte_défaut_sans
    }

    si famille == "monospace" {
        si style == "italic" {
            si graisse == GraisseFonte.Gras {
                retourne ctx.fonte_défaut_mono_italique_grasse
            }
            retourne ctx.fonte_défaut_mono_italique
        }

        si graisse == GraisseFonte.Gras {
            retourne ctx.fonte_défaut_mono_grasse
        }
        retourne ctx.fonte_défaut_mono
    }

    /* Défaut sérif. */
    si style == "italic" {
        si graisse == GraisseFonte.Gras {
            retourne ctx.fonte_défaut_sérif_italique_grasse
        }
        retourne ctx.fonte_défaut_sérif_italique
    }

    si graisse == GraisseFonte.Gras {
        retourne ctx.fonte_défaut_sérif_grasse
    }
    retourne ctx.fonte_défaut_sérif
}

/** \} */
