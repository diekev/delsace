importe Chaine

Attribut :: struct {
    nom: DOMString
    valeur: DOMString

    // À FAIRE(langage) élément: *Élément
}

détruit_attributs :: fonc (attributs: &[..]Attribut)
{
    déloge(attributs)
}

chaine_ou_défaut :: fonc (attribut: *Attribut, défaut := crée_chaine_utf16_unique_vide()) -> DOMString
{
    si attribut {
        retourne attribut.valeur
    }

    retourne défaut
}

cherche_attribut :: fonc (attributs: [..]Attribut, nom: DOMString) -> *Attribut
{
    pour * attributs {
        si it.nom == nom {
            retourne it
        }
    }

    retourne nul
}

ajoute_attribut :: fonc (attributs: *[..]Attribut, nom: DOMString, valeur: DOMString)
{
    attribut := Attribut(nom = nom, valeur = valeur)
    tableau_ajoute(attributs, attribut)
}
