/* Structures de données pour réprésenter des menus et des barres de menu pour
 * des applications. */

/* ------------------------------------------------------------------------- */
/** \nom Barre de menu.
 * \{ */

BarreDeMenu :: struct {
    menus: [..]*Menu
}

ajoute_menu :: fonc (barre_de_menu: *BarreDeMenu, texte: chaine) -> *Menu
{
    résultat := loge(Menu)
    résultat.texte = texte
    tableau_ajoute(*barre_de_menu.menus, résultat)
    retourne résultat
}

/** \} */

/* ------------------------------------------------------------------------- */
/** \nom Menu
 * \{ */

/* À FAIRE :
 * - icones
 * - raccouricis clavier
 * - séparateur
 * - sous-menu
 */
Menu :: struct {
    DonnéesÉlément :: union {
        SousMenu: *Menu
        Séparateur: z32
        Action: *Bouton
    }

    Élément :: struct {
        texte: chaine
        données: DonnéesÉlément
    }

    texte: chaine
    éléments: [..]Élément
}

ajoute_bouton :: fonc (menu: *Menu, bouton: *Bouton)
{
    tableau_ajoute(*menu.éléments, Menu.Élément(bouton.texte, bouton))
}

ajoute_séparateur :: fonc (menu: *Menu)
{
    tableau_ajoute(*menu.éléments, Menu.Élément("", 0))
}

ajoute_menu :: fonc (menu: *Menu, sous_menu: *Menu)
{
    tableau_ajoute(*menu.éléments, Menu.Élément(sous_menu.texte, sous_menu))
}

gère_clique_souris :: fonc (élément: Menu.Élément)
{
    discr élément.données {
        Action(bouton) {
            si bouton.sur_clique {
                bouton.sur_clique(bouton)
            }
        }
        sinon {}
    }
}

/** \} */
