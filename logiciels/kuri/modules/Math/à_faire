// -----------------
// Types
// -----------------

[ ] Vecteur 2D
[ ] Vecteur 3D
[ ] Normal 3D
[ ] Point 2D
[ ] Point 3D
[ ] Quaternion
[ ] Euler (voir IMath)
[ ] Matrice2x2
[ ] Matrice3x3
[ ] Matrice4x4
[ ] Degré
[ ] Radian
[ ] Boite 2D
[ ] Boite 3D
[ ] Ligne 2D
[ ] Ligne 3D
[ ] Plan 2D (redondant avec Boite 2D ?)
[ ] Plan 3D
[X] Complexe
[ ] Courbes (bézier, etc.)
[ ] UV

// -----------------
// Fonctions
// -----------------

[ ] Interpolation Linéaire
[ ] Interpolation Bilinéraire
[ ] Interpolation Cubique
[ ] exp, nan, fini, infini, etc.
[ ] ...
[ ] Transformée de Fourrier

// -----------------
// Constantes
// -----------------

[ ] E                     2.7182818284590452354
[ ] LOG_2_E               1.4426950408889634074
[ ] LOG_10_E              0.43429448190325182765
[ ] LN_2                  0.69314718055994530942
[ ] LN_10                 2.30258509299404568402
[ ] PI                    3.14159265358979323846
[ ] PI_SUR_2              1.57079632679489661923
[ ] PI_SUR_4              0.78539816339744830962
[ ] RECIPR_PI             0.31830988618379067154
[ ] RECIPR_2_PI           0.63661977236758134308
[ ] _2_SUR_RACINE_PI      1.12837916709551257390
[ ] TAU
[ ] RACINE_DE_2           1.41421356237309504880
[ ] RECIPR_RACINE_DE_2    0.70710678118654752440
[ ] EPSILON

[ ] POIDS_DEG_RAD
[ ] POIDS_RAD_DEG
[ ] MIN
[ ] MAX
[ ] INFINITÉ

// -----------------
// Références
// -----------------

[ ] Blender
[ ] Eigen
[ ] Embree
[ ] GLM
[ ] Imath
[ ] Orthonormal Basis Revisited
[ ] PBRT
[ ] PBVR

// -----------------
// Idées
// -----------------

produit_scalaire -> Radian

la longueur du produit_vectoriel est le sinus entre les angles
produit_vectoriel -> Vec
longueur -> r32

Matrice -> colonne majeur, ligne majeure, droitière, gauchère

// -----------------
// Statistiques
// -----------------

[ ] Moyenne
[ ] Médianne
[ ] Mode
[ ] Écart-Type

Degrés :: #opaque $T
Radians :: #opaque $T

vers_degrés :: fonc (a: Radians($T)) -> Degrés(T)
{
    retourne Degrés(a comme T / 180.0 * PI)
}

vers_radians :: fonc (a: Degrés($T)) -> Radians(T)
{
    retourne Radians(a comme T / PI * 180.0)
}
