libmodule_c_compression :: #bibliothèque "module_c_compression"

/**
 * Ensemble de fonctions de rappel utilisées par les routines de compression ou de décompression
 * afin de déléguer certaines actions à l'application Kuri.
 */
ContexteCompression :: struct {
    /**
     * Définis la taille du stockage temporaire qui sera utilisé par la bibliothèque.
     */
    taille_stockage_temporaire :  #nulctx fonc (*ContexteCompression)(n32)
    /**
     * Retourne un pointeur vers le stockage temporaire à utiliser. Chaque invocation de ce rappel
     * doit retourner un stockage différent.
     */
    cree_stockage_temporaire :  #nulctx fonc (*ContexteCompression,n32)(*n8)
    /**
     * Détruit le stockage temporaire créé via cree_stockage_temporaire.
     */
    detruit_stockage_temporaire :  #nulctx fonc (*ContexteCompression,*n8,n32)(rien)
    /**
     * Un pointeur vers des données utilisateur possibles, qui peut être mis en place par
     * l'application cliente.
     */
    donnees_utilisateur : *rien
}

/**
 * Ensemble de fonctions de rappel abstrayant un flux de données, soit pour l'entrée, soit la
 * sortie.
 */
FluxCompression :: struct {
    /**
     * Lis max quantité de données depuis le flux, et retourne la quantité lue.
     */
    lis :  #nulctx fonc (*FluxCompression,n32,*n8)(n32)
    /**
     * Écris max quantité de données depuis le flux, et retourne la quantité lue.
     */
    ecris :  #nulctx fonc (*FluxCompression,n32,*n8)(n32)
    /**
     * Doit retourner vrai si le flux possede une erreur.
     */
    possede_erreur :  #nulctx fonc (*FluxCompression)(bool)
    /**
     * Retourne vrai si nous avons dépasser la fin du flux.
     */
    fin_de_flux :  #nulctx fonc (*FluxCompression)(bool)
    /**
     * Un pointeur vers des données utilisateur possibles, qui peut être mis en place par
     * l'application cliente.
     */
    donnees_utilisateur : *rien
}

/**
 * Compresse les données d'un flux d'entrée vers un flux de sortie au format Zlib.
 */
ZLIB_compresse :: fonc (ctx : *ContexteCompression, flux_entree : *FluxCompression, flux_sortie : *FluxCompression, niveau : z32) -> z32 #externe libmodule_c_compression

/**
 * Décompresse les données d'un flux d'entrée vers un flux de sortie au format Zlib.
 */
ZLIB_decompresse :: fonc (ctx : *ContexteCompression, flux_entree : *FluxCompression, flux_sortie : *FluxCompression) -> z32 #externe libmodule_c_compression

