libkernel32 :: #bibliothÃ¨que "Kernel32"

STD_INPUT_HANDLE :: -10 comme DWORD
STD_OUTPUT_HANDLE :: -11 comme DWORD
STD_ERROR_HANDLE :: -12 comme DWORD

DWORD :: n32
LPDWORD :: *DWORD
HANDLE :: *rien
LPCVOID :: *rien
OVERLAPPED :: struct #externe
LPOVERLAPPED :: *OVERLAPPED

GetStdHandle :: fonc (nStdHandle: DWORD) -> HANDLE #externe libkernel32

CloseHandle :: fonc (hOBject: HANDLE) -> bool #externe libkernel32

WriteFile :: fonc (hFile: HANDLE, lpBuffer: LPCVOID, nNumberOfBytesToWrite: DWORD, nNUmberOfBytesWritten: LPDWORD, lpOverlapped: LPOVERLAPPED) -> bool #externe libkernel32

// WriteFileEx :: fonc (hFile: HANDLE, lpBuffer: LPCVOID, nNumberOfBytesToWrite: DWORD, lpOverlapped: LPOVERLAPPED, lpOverlappedCompletion: LPOVERLAPPED_COMPLETION_ROUTINE) -> bool #externe libkernel32
