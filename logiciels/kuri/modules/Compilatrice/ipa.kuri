// ----------------------------------------------------------------------------
// Prodéclarations de types opaques pour certains types non manipulable directement

EspaceDeTravail :: struct #externe;
Module :: struct #externe;

// ----------------------------------------------------------------------------
// Interface de métaprogrammation pour controler ou communiquer avec la Compilatrice

ajoute_chaine_à_la_compilation :: fonc(espace: *EspaceDeTravail, c: chaine) -> rien #compilatrice

ajoute_fichier_à_la_compilation :: fonc(espace: *EspaceDeTravail, c: chaine) -> rien #compilatrice

ajoute_chaine_au_module :: fonc (espace: *EspaceDeTravail, module: *Module, c: chaine) #compilatrice

compilatrice_obtiens_options :: fonc () -> *OptionsCompilation #compilatrice

compilatrice_ajourne_options :: fonc (options: *OptionsCompilation) -> rien #compilatrice

compilatrice_attend_message :: fonc () -> *Message #compilatrice

compilatrice_commence_interception :: fonc (espace: *EspaceDeTravail) #compilatrice

compilatrice_termine_interception :: fonc (espace: *EspaceDeTravail) #compilatrice

compilatrice_rapporte_erreur :: fonc (espace: *EspaceDeTravail, fichier: chaine, ligne: z32, message: chaine) #compilatrice

compilatrice_rapporte_avertissement :: fonc (espace: *EspaceDeTravail, fichier: chaine, ligne: z32, message: chaine) #compilatrice

/* Lèxe le fichier d'entrée et retourne un tableau de léxèmes, le tableau devra être délogé par le programme */
compilatrice_lèxe_fichier :: fonc (fichier: chaine) -> []Lexème #compilatrice

/* Retourne l'espace de travail dans lequel le métaprogramme appelant la fonction est exécuté. */
compilatrice_espace_courant :: fonc () -> *EspaceDeTravail #compilatrice

démarre_un_espace_de_travail :: fonc (nom: chaine, options: *OptionsCompilation) -> *EspaceDeTravail #compilatrice

espace_défaut_compilation :: fonc () -> *EspaceDeTravail #compilatrice

compilatrice_possède_erreur :: fonc (espace: *EspaceDeTravail) -> bool #compilatrice
