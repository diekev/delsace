// Bibliothèque pour faire le pont entre le Compilateur et le programme compilé

charge "base"

RappelCompilateur :: struct {
    rappel_ajout_chaine_à_la_compilation : #nulctx fonc(chaine)(rien)
    rappel_ajout_fichier_à_la_compilation : #nulctx fonc(chaine)(rien)
}

// Il nous faudrait un système pour définir un symbole interne à un module
// afin d'éviter que les gens manipulent ceci
_RC : RappelCompilateur

#nulctx initialise_RC :: fonc(
    rappel_ajoute_chaine: #nulctx fonc(chaine)(rien),
    rappel_ajoute_fichier: #nulctx fonc(chaine)(rien)) -> rien
{
    nonsûr {
        _RC.rappel_ajout_chaine_à_la_compilation = rappel_ajoute_chaine
        _RC.rappel_ajout_fichier_à_la_compilation = rappel_ajoute_fichier
    }
}

#nulctx ajoute_chaine_à_la_compilation :: fonc(c: chaine) -> rien
{
    _RC.rappel_ajout_chaine_à_la_compilation(c)
}

#nulctx ajoute_fichier_à_la_compilation :: fonc(c: chaine) -> rien
{
    _RC.rappel_ajout_fichier_à_la_compilation(c)
}
