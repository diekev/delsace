// Structures de bases pour contenir les informations d'un type.

id_info :: énum z32 {
    ENTIER    := 0
	RÉEL      := 1
	BOOLÉEN   := 2
	CHAINE    := 3
	POINTEUR  := 4
	STRUCTURE := 5
	FONCTION  := 6
	TABLEAU   := 7
	EINI      := 8
	RIEN      := 9
	ÉNUM      := 10
	OCTET     := 11
}

InfoType :: struct {
	id : id_info
	taille_en_octet : n32
}

InfoTypeEntier :: struct {
	empl base : InfoType

	est_signé : bool
}

InfoTypePointeur :: struct {
	empl base : InfoType

	type_pointé : *InfoType
	est_référence : bool
}

InfoTypeTableau :: struct {
	empl base : InfoType

	type_pointé : *InfoType
	est_tableau_fixe : bool
	taille_fixe : z32
}

InfoTypeMembreStructure :: struct {
	nom : chaine
	id : *InfoType
	décalage : z64 // décalage en octets dans la structure
	//drapeaux : n32
}

InfoTypeStructure :: struct {
	empl base : InfoType

	nom : chaine
	membres : []*InfoTypeMembreStructure
}

InfoTypeFonction :: struct {
	empl base : InfoType

	types_entrée : []*InfoType
	types_sortie : []*InfoType
	est_coroutine : bool
}

InfoTypeÉnum :: struct {
	empl base : InfoType

	nom : chaine
	valeurs : []z32 // À FAIRE typage selon énum
	noms : []chaine
	est_drapeau : bool
}
