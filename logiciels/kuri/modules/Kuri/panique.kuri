// nous importons Fondation car il nous faut le code d'impression, ce serait bien de ne pas avoir à faire cela afin que Kuri soit sans aucune dépendances...
importe Fondation
importe GlibC // pour exit
importe Unicode

imprime_trace_appel :: fonc () #sanstrace
{
    trace := contexte().trace_appel

    /* Il est possible de ne pas avoir de trace d'appel.
     * La trace du contexte est toujours valide, mais la trace précédente est alors nulle. */
    saufsi trace && trace.précédente {
        imprime("Aucune trace d'appel disponible\n\n")
        retourne
    }

    tantque trace != nul {
        info_fonction := trace.info_fonction
        info_appel := trace.info_appel

        imprime("%:%:% : dans % (%)\n", info_fonction.fichier, info_appel.ligne, info_appel.colonne, info_fonction.nom, info_fonction.adresse);
        imprime("%", info_appel.texte);

        i := 0
        tantque i < info_appel.colonne {
            imprime(" ")
            i += nombre_octets_utf8(*info_appel.texte[i])
        }

        imprime("\x1b[1;31m^\x1b[0m\n\n");

        trace = trace.précédente
    }
}

imprime_panique :: fonc () -> rien #sanstrace #sansretour
{
    imprime_trace_appel()
    imprime("\nL'exécution du programme a été arrêtée à cause d'une panique.\n")
    exit(1)
}

panique :: fonc (message: chaine, args: ...eini) -> rien #sanstrace #interface #sansretour
{
    rappel := contexte().rappel_panique
    si rappel != nul {
        rappel()
    }

    imprime("\n\x1b[1;31mErreur :\x1b[0m ")
    imprime(message, ...args)
    imprime("\n\n")
    imprime_panique()
}

panique_dépassement_limites_tableau :: fonc (taille: z64, index: z64) -> rien #sanstrace #interface #sansretour
{
    panique("dépassement des limites du tableau, la taille est de % mais l'index est de %", taille, index)
}

panique_dépassement_limites_chaine :: fonc (taille: z64, index: z64) -> rien #sanstrace #interface #sansretour
{
    panique("dépassement des limites de la chaine, la taille est de % mais l'index est de %", taille, index);
}

panique_membre_union :: fonc () -> rien #sanstrace #interface #sansretour
{
    panique("utilisation du membre non-actif d'une union")
}

panique_hors_mémoire :: fonc () -> rien #sanstrace #interface #sansretour
{
    panique("impossible d'allouer de la mémoire")
}

panique_erreur_non_gérée :: fonc () -> rien #sanstrace #interface #sansretour
{
    panique("une erreur n'a pas été piégée")
}
