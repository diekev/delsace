/* Module servant à définir des types et routines pour les périphériques
 * de l'ordinateur (souris, clavier, etc.). */

importe Géométrie

/* ------------------------------------------------------------------------- */
/** \nom TypeCurseurSystème.
 * \{ */

TypeCurseurSystème :: énum {
    /* Curseur en forme de flèche (défaut sur la plupart des systèmes). */
    FLÈCHE
    /* Curseur en forme de I pour indiquer une insertion de texte. */
    TEXTE
    /* Curseur indiquant d'attendre sur une tâche. */
    ATTENTE
    /* Curseur en forme de cible. */
    CROIX
    /* Flèche avec une attente. */
    FLÈCHE_AVEC_ATTENTE
    /* Double flèche diagonale pointant nord-ouest sud-est. */
    FLÈCHE_DOUBLE_NOSE
    /* Double flèche diagonale pointant nord-est sud-ouest. */
    FLÈCHE_DOUBLE_NESO
    /* Double flèche horizontale. */
    FLÈCHE_DOUBLE_HORIZONTALE
    /* Double flèche verticale. */
    FLÈCHE_DOUBLE_VERTICALE
    /* Superposition de toutes les doubles flèches. */
    FLÈCHE_DOUBLE_TOUT
    /* Curseur indiquant que quelque chose est interdit. */
    INTERDIT
    /* Curseur représentant une main. */
    MAIN
}

/** } */

/* ------------------------------------------------------------------------- */
/** \nom CliqueSouris
 * \{ */

ModificateurClavié :: énum {
    COMMANDE_OS
    CONTROL
    MAJUSCULE
    OPTION
    ALT
}

ÉtatSouris :: struct {
    quand: z64 // le temps où l'état a été enregistré
    où: Point2D(z32) // là où la souris se trouve
    modificateur: ModificateurClavié
}

ActionSouris :: énum {
    PRESSÉE
    RELACHÉE
    DÉPLACÉE
    ROULEMENT
}

BoutonSouris :: énum {
    PRIMAIRE
    CONTEXTUEL
    TERTIAIRE
    AVANT
    ARRIÈRE

    GAUCHE :: PRIMAIRE
    DROIT :: CONTEXTUEL
    MOLETTE :: TERTIAIRE
}

CliqueSouris :: struct {
    état: ÉtatSouris
    action: ActionSouris
    bouton: BoutonSouris
    /* Delta pour la molette. */
    delta: z32
}

/** } */

/* ------------------------------------------------------------------------- */
/** \nom Clavier
 * \{ */

CléClavier :: énum {
    CLÉ_INCONNUE

    CLÉ_A
    CLÉ_B
    CLÉ_C
    CLÉ_D
    CLÉ_E
    CLÉ_F
    CLÉ_G
    CLÉ_H
    CLÉ_I
    CLÉ_J
    CLÉ_K
    CLÉ_L
    CLÉ_M
    CLÉ_N
    CLÉ_O
    CLÉ_P
    CLÉ_Q
    CLÉ_R
    CLÉ_S
    CLÉ_T
    CLÉ_U
    CLÉ_V
    CLÉ_W
    CLÉ_Y
    CLÉ_X
    CLÉ_Z

    CLÉ_0
    CLÉ_1
    CLÉ_2
    CLÉ_3
    CLÉ_4
    CLÉ_5
    CLÉ_6
    CLÉ_7
    CLÉ_8
    CLÉ_9

    CLÉ_ENTRÉE
    CLÉ_RETOUR
    CLÉ_ÉCHAPPE
    CLÉ_TAB

    CLÉ_VIRGULE
    CLÉ_ESPACE
    CLÉ_POINT_VIRGULE
    CLÉ_DOUBLE_POINT
    CLÉ_POINT_EXCLAMATION

    CLÉ_FLÈCHE_GAUCHE
    CLÉ_FLÈCHE_DROITE
    CLÉ_FLÈCHE_HAUT
    CLÉ_FLÈCHE_BAS
}

__caractères_clé_clavier : [CléClavier.nombre_éléments]z8

caractère_pour_clé_clavier :: fonc (clé_clavier: CléClavier) -> z8
{
    retourne __caractères_clé_clavier[clé_clavier]
}

initialise_caractères_clé_clavier :: fonc ()
{
    __caractères_clé_clavier[CléClavier.CLÉ_INCONNUE] = 0

    __caractères_clé_clavier[CléClavier.CLÉ_A] = 'a'
    __caractères_clé_clavier[CléClavier.CLÉ_B] = 'b'
    __caractères_clé_clavier[CléClavier.CLÉ_C] = 'c'
    __caractères_clé_clavier[CléClavier.CLÉ_D] = 'd'
    __caractères_clé_clavier[CléClavier.CLÉ_E] = 'e'
    __caractères_clé_clavier[CléClavier.CLÉ_F] = 'f'
    __caractères_clé_clavier[CléClavier.CLÉ_G] = 'g'
    __caractères_clé_clavier[CléClavier.CLÉ_H] = 'h'
    __caractères_clé_clavier[CléClavier.CLÉ_I] = 'i'
    __caractères_clé_clavier[CléClavier.CLÉ_J] = 'j'
    __caractères_clé_clavier[CléClavier.CLÉ_K] = 'k'
    __caractères_clé_clavier[CléClavier.CLÉ_L] = 'l'
    __caractères_clé_clavier[CléClavier.CLÉ_M] = 'm'
    __caractères_clé_clavier[CléClavier.CLÉ_N] = 'n'
    __caractères_clé_clavier[CléClavier.CLÉ_O] = 'o'
    __caractères_clé_clavier[CléClavier.CLÉ_P] = 'p'
    __caractères_clé_clavier[CléClavier.CLÉ_Q] = 'q'
    __caractères_clé_clavier[CléClavier.CLÉ_R] = 'r'
    __caractères_clé_clavier[CléClavier.CLÉ_S] = 's'
    __caractères_clé_clavier[CléClavier.CLÉ_T] = 't'
    __caractères_clé_clavier[CléClavier.CLÉ_U] = 'u'
    __caractères_clé_clavier[CléClavier.CLÉ_V] = 'v'
    __caractères_clé_clavier[CléClavier.CLÉ_W] = 'w'
    __caractères_clé_clavier[CléClavier.CLÉ_X] = 'x'
    __caractères_clé_clavier[CléClavier.CLÉ_Y] = 'y'
    __caractères_clé_clavier[CléClavier.CLÉ_Z] = 'z'

    __caractères_clé_clavier[CléClavier.CLÉ_0] = '0'
    __caractères_clé_clavier[CléClavier.CLÉ_1] = '1'
    __caractères_clé_clavier[CléClavier.CLÉ_2] = '2'
    __caractères_clé_clavier[CléClavier.CLÉ_3] = '3'
    __caractères_clé_clavier[CléClavier.CLÉ_4] = '4'
    __caractères_clé_clavier[CléClavier.CLÉ_5] = '5'
    __caractères_clé_clavier[CléClavier.CLÉ_6] = '6'
    __caractères_clé_clavier[CléClavier.CLÉ_7] = '7'
    __caractères_clé_clavier[CléClavier.CLÉ_8] = '8'
    __caractères_clé_clavier[CléClavier.CLÉ_9] = '9'

    __caractères_clé_clavier[CléClavier.CLÉ_ENTRÉE] = '\n'
    __caractères_clé_clavier[CléClavier.CLÉ_RETOUR] = 0
    __caractères_clé_clavier[CléClavier.CLÉ_ÉCHAPPE] = 0
    __caractères_clé_clavier[CléClavier.CLÉ_TAB] = '\t'
    __caractères_clé_clavier[CléClavier.CLÉ_ESPACE] = ' '

    __caractères_clé_clavier[CléClavier.CLÉ_VIRGULE] = ','
    __caractères_clé_clavier[CléClavier.CLÉ_POINT_VIRGULE] = ';'
    __caractères_clé_clavier[CléClavier.CLÉ_DOUBLE_POINT] = ':'
    __caractères_clé_clavier[CléClavier.CLÉ_POINT_EXCLAMATION] = '!'
}

/** } */

/* ------------------------------------------------------------------------- */
/** \nom Initialisation du module
 * \{ */

initialise_tables_clavier :: fonc ()
{
    initialise_caractères_clé_clavier()
}

#ajoute_init initialise_tables_clavier()

/** } */
