// Interface pour les fonctions standardes définies par POSIX

importe Fondation
importe GlibC

getenv :: fonc (nom: ChaineC) -> ChaineC #externe
getuid :: fonc () -> z32 #externe
system :: fonc (command: ChaineC) -> z32 #externe
usleep :: fonc (µsec: n32) -> z32 #externe
symlink :: fonc (target: ChaineC, linkpath: ChaineC) -> z32 #externe
mkdir :: fonc (chemin: ChaineC, mode: z32) -> z32 #externe

chaine_environnement :: fonc (nom: chaine) -> chaine
{
    chn := getenv(ChaineC(nom.pointeur))

    saufsi chn {
        retourne ""
    }

    retourne convertis_chaine_c(chn)
}

est_utilisateur_racine :: fonc() -> bool
{
    retourne getuid() == 0
}

exécute_commande_externe :: fonc (args: ...chaine) -> bool
{
    enchaineuse : Enchaineuse
    initialise_enchaineuse(*enchaineuse)

    pour args {
        ajoute_au_tampon(*enchaineuse, it)
        ajoute_au_tampon(*enchaineuse, " ")
    }

    ajoute_au_tampon(*enchaineuse, '\0')

    commande := chaine_depuis_enchaineuse(*enchaineuse)
    diffère { déloge(commande) }

    si system(ChaineC(commande.pointeur)) != 0 {
        retourne faux
    }

    retourne vrai
}

dors_millisecondes :: fonc (millisecondes: z32)
{
    si millisecondes < 0 {
        retourne
    }

    si millisecondes == 0 {
        retourne
    }

    _ := usleep((millisecondes * 1000) comme n32)
}
