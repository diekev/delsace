#bibliothèque_dynamique "GL"
#bibliothèque_dynamique "GLEW"

OGL :: énum n32 {
    ARRAY_BUFFER :: 0x8892
    ELEMENT_ARRAY_BUFFER :: 0x8893
    STATIC_DRAW :: 0x88E4
    TRIANGLES :: 0x0004
    FLOAT :: 0x1406
    RED :: 0x1903
    GREEN :: 0x1904
    BLUE :: 0x1905
    ALPHA :: 0x1906
    RGB :: 0x1907
    RGBA :: 0x1908
    LUMINANCE :: 0x1909
    LUMINANCE_ALPHA :: 0x190A
    FALSE :: 0
    VERTEX_SHADER :: 0x8B31
    FRAGMENT_SHADER :: 0x8B30
    LINK_STATUS :: 0x8B82
    INFO_LOG_LENGTH :: 0x8B84
    COMPILE_STATUS :: 0x8B81
}

_GL_BLEND : n32 = 0x0BE2
_GL_SRC_ALPHA : n32 = 0x0302
_GL_ONE_MINUS_SRC_ALPHA : n32 = 0x0303
_GL_TEXTURE0 :: 0x84C0
_GL_TEXTURE_1D :: 0x0DE0
_GL_TEXTURE_2D :: 0x0DE1
_GL_UNSIGNED_BYTE :: 0x1401
_GL_UNSIGNED_INT :: 0x1405
_GL_FLOAT :: 0x1406
_GL_RED :: 0x1903
_GL_RGBA :: 0x1908
_GL_NEAREST :: 0x2600
_GL_LINEAR :: 0x2601
_GL_TEXTURE_MIN_FILTER :: 0x2800
_GL_TEXTURE_MAG_FILTER :: 0x2801
_GL_TEXTURE_WRAP_S :: 0x2802
_GL_TEXTURE_WRAP_T :: 0x2803
_GL_CLAMP :: 0x2900
_GL_REPEAT :: 0x2901
_GL_CLAMP_TO_EDGE :: 0x812F
_GL_INVALID_ENUM : n32 = 0x0500
_GL_INVALID_VALUE : n32 = 0x0501
_GL_INVALID_OPERATION : n32 = 0x0502
_GL_INVALID_FRAMEBUFFER_OPERATION : n32 = 0x0506

externe glewExperimental : z32

glewInit :: fonc externe () -> z32

glClear :: fonc externe (bit : z32) -> rien
glClearColor :: fonc externe (r : r32, g : r32, b : r32, a : r32) -> rien

glEnable :: fonc externe (cap: n32) -> rien
glDisable :: fonc externe (cap: n32) -> rien
glBlendFunc :: fonc externe (sfactor: n32, dfactor: n32) -> rien

glViewport :: fonc externe (px : z32, py : z32, tx : z32, ty : z32) -> rien

//# foncs de VAO
glGenVertexArrays :: fonc externe (n : z32, ptr : *n32) -> rien
glDeleteVertexArrays :: fonc externe (n : z32, ptr : *n32) -> rien
glBindVertexArray :: fonc externe (id : n32) -> rien

//# foncs de VBO
glGenBuffers :: fonc externe (n : z32, ptr : *n32) -> rien
glDeleteBuffers :: fonc externe (n : z32, ptr : *n32) -> rien
glBindBuffer :: fonc externe (target : OGL, id : n32) -> rien
glBufferData :: fonc externe (target : OGL, size : n64, data : *rien, usage : OGL) -> rien

//# foncs Arrays
glEnableVertexAttribArray :: fonc externe (id : n32) -> rien
glDisableVertexAttribArray :: fonc externe (id : n32) -> rien
glVertexAttribPointer :: fonc externe (index : n32, size : z32, type_ : OGL, normalized : OGL, stride : z32, pointer : *rien) -> rien
glDrawArrays :: fonc externe (mode : OGL, first : z32, count : z64) -> rien
glDrawElements :: fonc externe (mode : OGL, count: z64, type: z32, indices: *rien) -> rien
glUniform1ui :: fonc externe (loc: n32, uniform: n32) -> rien

// textures
glGenTextures :: fonc externe (n: z32, id: *n32) -> rien
glDeleteTextures :: fonc externe (n: z32, id: *n32) -> rien
glIsTexture :: fonc externe (id: n32) -> bool
glActiveTexture :: fonc externe (id: z32) -> rien
glBindTexture :: fonc externe (cible: z32, id: n32) -> rien
glTexParameteri :: fonc externe (cible: z32, a: z32, b: z32) -> rien

glTexImage2D :: fonc externe (
    cible: z32,
    x: z32,
    format_interne: z32,
    taille_x: z32,
    taille_z: z32,
    bordure: z32,
    format: z32,
    type: z32,
    données: *rien) -> rien

//# foncs de nuanceurs/programmes
glShaderSource :: fonc externe (shader : n32, count : z64, string : **z8, length : *z32) -> rien
glCreateShader :: fonc externe (shaderType : OGL) -> n32
glCompileShader :: fonc externe (shader : n32) -> rien
glDeleteShader :: fonc externe (shader : n32) -> rien
glDetachShader :: fonc externe (program : n32, shader : n32) -> rien
glCreateProgram :: fonc externe () -> n32
glAttachShader :: fonc externe (program : n32, shader : n32) -> rien
glLinkProgram :: fonc externe (program : n32) -> rien
glUseProgram :: fonc externe (program : n32) -> rien
glDeleteProgram :: fonc externe (program : n32) -> rien
glGetShaderiv :: fonc externe (shader : n32, pname : OGL, params : *z32) -> rien
glGetShaderInfoLog :: fonc externe (shader : n32, maxLength : z32, length : *z32, infoLog : *z8) -> rien
glGetProgramiv :: fonc externe (program : n32, pname : OGL, params : *z32) -> rien
glGetProgramInfoLog :: fonc externe (shader : n32, maxLength : z32, length : *z32, infoLog : *z8) -> rien
glGetAttribLocation :: fonc externe (programme : n32, nom: *z8) -> n32
glGetUniformLocation :: fonc externe (programme : n32, nom: *z8) -> n32
glIsShader :: fonc externe (shader: n32) -> bool

glGetError :: fonc externe () -> n32

// ----------------------------------------------------------------------------

importe Fondation

initialise_opengl :: fonc () -> bool
{
    nonsûr {
        glewExperimental = 1
    }

    erreur_ := glewInit()
    retourne erreur_ == 0
}

vérifie_erreur :: fonc() -> rien
{
    erreur_ := glGetError()

	si erreur_ == 0 {
        retourne
	}

	imprime("erreur OpenGL !\n")

    discr erreur_ {
        _GL_INVALID_ENUM {
            imprime("-- énumération invalide\n")
        }
        _GL_INVALID_VALUE {
            imprime("-- valeur invalide\n")
        }
        _GL_INVALID_OPERATION {
            imprime("-- opération invalide\n")
        }
        _GL_INVALID_FRAMEBUFFER_OPERATION {
            imprime("-- opération invalide sur framebuffer\n")
        }
        sinon {
            imprime("-- erreur inconnue, code %\n", erreur_)
        }
    }
}
