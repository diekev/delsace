importe Fondation

charge "interface"

initialise_opengl :: fonc () -> bool
{
    nonsûr {
        glewExperimental = 1
    }

    erreur_ := glewInit()
    retourne erreur_ == 0
}

vérifie_erreur :: fonc (raison: chaine = "") -> rien
{
    erreur_ := glGetError()

	si erreur_ == 0 {
        retourne
	}

    enchaineuse : Enchaineuse
    initialise_enchaineuse(*enchaineuse)

    si raison {
        imprime_dans_enchaineuse(*enchaineuse, "[%] erreur OpenGL !\n", raison)
    }
    sinon {
	    imprime_dans_enchaineuse(*enchaineuse, "erreur OpenGL !\n")
    }

    discr erreur_ {
        GL_INVALID_ENUM {
            imprime_dans_enchaineuse(*enchaineuse, "-- énumération invalide\n")
        }
        GL_INVALID_VALUE {
            imprime_dans_enchaineuse(*enchaineuse, "-- valeur invalide\n")
        }
        GL_INVALID_OPERATION {
            imprime_dans_enchaineuse(*enchaineuse, "-- opération invalide\n")
        }
        GL_INVALID_FRAMEBUFFER_OPERATION {
            imprime_dans_enchaineuse(*enchaineuse, "-- opération invalide sur framebuffer\n")
        }
        sinon {
            imprime_dans_enchaineuse(*enchaineuse, "-- erreur inconnue, code %\n", erreur_)
        }
    }

    chaine_erreur := chaine_depuis_enchaineuse(*enchaineuse)
    panique(chaine_erreur)
}
