{
    "scopeName": "source.kuri",
    "patterns": [
        { "include": "#comment-slash" },
        { "include": "#comment-bloc" },
        { "include": "#directive" },
        { "include": "#annotation" },
        { "include": "#control-keyword" },
        { "include": "#other-keyword" },
        { "include": "#string" },
        { "include": "#char" },
        { "include": "#integer" },
        { "include": "#boolean" },
        { "include": "#pointer" },
        { "include": "#typename" }
    ],
    "repository": {
        "comment-slash": {
            "name": "comment.kuri",
            "begin": "//",
            "end": "$"
        },
        "comment-bloc": {
            "name": "comment.kuri",
            "begin": "/\\*",
            "end": "\\*/"
        },
        "directive": {
            "name": "comment.kuri",
            "begin": "#",
            "end": "($| )"
        },
        "annotation": {
            "name": "comment.kuri",
            "begin": "@",
            "end": "($| )"
        },
        "control-keyword": {
            "name": "keyword.control.kuri",
            "match": "\\b(définis|retourne|si|saufsi|sinon|boucle|tantque|répète|pour|dans|arrête|continue|reprends|discr|sansarrêt|diffère|pousse_contexte|tente|piège|nonatteignable)\\b"
        },
        "other-keyword": {
            "name": "keyword.other.kuri",
            "match": "\\b(struct|énum|énum_drapeau|erreur|eini_erreur|importe|charge|fonc|empl|union|nonsûr|externe|mémoire|info_de|init_de|type_de|taille_de|opérateur|comme)\\b"
        },
        "string": {
            "name": "string.quoted.double.kuri",
            "match": "\"([^\"\\\\\\n]|\\\\[^\\n]?)*?[\"\\n]"
        },
        "char": {
            "name": "constant.character.kuri",
            "match": "'([^'\\\\\\n]|\\\\[^\\n]?)*?['\\n]"
        },
        "integer": {
            "name": "constant.numeric.kuri",
            "match": "\\b(0[xXbBoO][0-9A-Fa-f_]+)|([0-9_]+)\\b"
        },
        "boolean": {
            "name": "constant.language.kuri",
            "match": "\\b(faux|vrai)\\b"
        },
        "pointer": {
            "name": "constant.language.kuri",
            "match": "\\bnul\\b"
        },
        "typename": {
            "name": "support.type.kuri",
            "match": "\\b(rien|octet|n8|n16|n32|n64|z8|z16|z32|z64|r16|r32|r64|bool|chaine|eini|type_de_données|adresse_fonction|dff_adr|adr_plt_nat|adr_plt_rel|taille_mnat|taille_mrel|nbr_nat|nbr_rel|nbf_flt)\\b"
        }
    }
}
