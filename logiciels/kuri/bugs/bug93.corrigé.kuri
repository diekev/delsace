/* Erreur de compilation si deux fonctions polymorphiques avec des
 * spécifications de types différents sont capable d'être utilisées
 * pour un appel de fonction.
 * Voir « $T et [..]$T sont ambigües » dans Arachné.
 * Catégorie : [validation sémantique, expression appel, fonction polymorphique]
 */

importe Fondation

/* $T et [..]$T sont ambigües, il faudrait un système plus subtil, où le nombre
 * de déréférencement de types est pris en compte.
 */
vole_données_ :: fonc (v: &$T) -> T
{
    résultat : T = v
    v = T()
    retourne résultat
}

vole_données_ :: fonc (v: &[..]$T) -> [..]T
{
    résultat : [..]T = v
    v.pointeur = nul
    v.taille = 0
    v.capacité = 0
    retourne résultat
}

principale :: fonc () -> z32
{
    tabl : []z32 = [0, 1, 2, 3, 4]

    tabl_dyn : [..]z32 = tableau_copie(tabl)
    tabl_dyn_2 := vole_données_(tabl_dyn)
    diffère déloge(tabl_dyn_2)

    assert(tabl_dyn.pointeur == nul)
    assert(tabl_dyn.taille == 0)
    assert(tabl_dyn.capacité == 0)

    assert(tabl_dyn_2.pointeur != nul)
    assert(tabl_dyn_2.taille == 5)
    assert(tabl_dyn_2.capacité == 5)

    retourne 0
}
