/* Bug corrigé par le commit : 9a03204b17f7fc2c1ea902b05c3f90a512469a26
 *
 * Les variables logées ne sont pas initialisées.
 * Ceci peut être troublant par exemple pour les tableaux qu'elles contiennent,
 * qui sont initialisés avec une mémoire poubelle, faisant échouer les
 * allocations.
 *
 * Je pense qu'une solution serait de créer des fonctions d'initialisation
 * pour les structures basées sur les expressions fournies pas le programmeur
 * (ou 0/nul/"" le cas échéant).
 * Les fonctions serait alors appelées, et disponible via le système
 * d'introspection via un mot-clé (init_de ?)
 *
 * Catégorie : [génération code, expression loge, initialisation zéro]
 */

importe Fondation

MaStructure :: struct {
    tabl: [..]z32
}

principale :: fonc ()
{
    x := loge(MaStructure)

    si x.tabl.taille != 0 {
        exit(1)
    }

    si x.tabl.pointeur != nul {
        exit(1)
    }

    // il est possible que le bug ne soit pas visible, si la mémoire où le tableau
    // se trouve est déjà à 0
    tableau_ajoute(*x.tabl, 0)

    déloge(x.tabl)
    déloge(x)
}
