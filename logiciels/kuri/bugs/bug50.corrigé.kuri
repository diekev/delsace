// pas d'erreur de compilation quand nous redéfinissons une fonction via un métaprogramme (ici, la fonction principale)

importe Support

principale :: fonc () -> z32
{
    erreur_survenue := #exécute compile_script_erroné(«
        importe Compilatrice
        importe Fondation

        génère_fonction_principale :: fonc ()
        {
            enchaineuse : Enchaineuse
            initialise_enchaineuse(*enchaineuse)

            ajoute_au_tampon(*enchaineuse, "principale :: fonc () -> z32\n")
            ajoute_au_tampon(*enchaineuse, "{\n")
            ajoute_au_tampon(*enchaineuse, "    retourne 32\n")
            ajoute_au_tampon(*enchaineuse, "}\n")

            chn_principale := chaine_depuis_enchaineuse(*enchaineuse)

            espace := espace_défaut_compilation()

            ajoute_chaine_à_la_compilation(espace, chn_principale)

            déloge chn_principale
        }

        #exécute génère_fonction_principale()

        principale :: fonc () -> z32
        {
            retourne 0
        }
    »)

    imprime_succès(erreur_survenue)
    retourne 0
}
