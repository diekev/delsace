/* La recherche de Symbole d'une structure dans une fonction échoue. */

importe Exétron

boucle_parallèle :: fonc (données: $T, rappel: fonc (*PlageExecution, T)(rien))
{
    /* Chercher S échoue. */
    DonneesTacheCorps :: struct ($S: type_de_données) {
        empl base: DonneesTacheParallele

        rappel: fonc (*PlageExecution, S)(rien)
        données: S
    }

    fonction :: fonc (données_tâche: *DonneesTacheParallele, plage: *PlageExecution)
    {
        données_locales := données_tâche comme *DonneesTacheCorps(T)
        données_locales.rappel(plage, données_locales.données)
    }

    données_tâche : DonneesTacheCorps(T)
    données_tâche.rappel = rappel
    données_tâche.fonction = fonction
    données_tâche.données = données

    plage : PlageExecution
    plage.debut = 0
    plage.fin = 1024

    EXETRON_boucle_parallele_legere(*plage, *données_tâche)
}

principale :: fonc () -> z32
{
    rappel :: fonc (plage: *PlageExecution @inutilisée, donnees: z32 @inutilisée)
    {
    }

    boucle_parallèle(6, rappel)
    retourne 0
}