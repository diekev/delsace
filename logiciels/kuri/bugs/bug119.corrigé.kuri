/* Les boucles « pour » personnalisées contenant des instructions de controle 
 * de boucle peuvent accéder aux instructions diffère hors de leurs portées.
 * Catégorie : [validation sémantique, portée, diffère, opérateur pour]
 */

importe Fondation

TypePersonnalisé :: struct {
}

opérateur pour :: fonc (type: TypePersonnalisé) -> z32
{
    pour 1 {
        `it = 0
        `index_it = 0

        #corps_boucle
    }
}

principale :: fonc () -> z32
{
    x := 0
    diffère x = 1

    pour TypePersonnalisé() {
        /* « diffère » est exécuté alors qu'il ne devrait l'être. */
        continue
    }

    si x == 1 {
        // imprime("ÉCHEC !\n")
        retourne 1
    }

    // imprime("SUCCÈS !\n")
    retourne 0
}
