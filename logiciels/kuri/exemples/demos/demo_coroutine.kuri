importe "flux"
importe "chaine"
importe "iter"

Noeud :: struct {
    suiv : *Noeud
    val := 0
}

iter_liste_noeud :: corout(noeud : *Noeud) -> *Noeud
{
    nloc := noeud

    tantque nloc != nul {
        retiens nloc
        nloc = nloc.suiv
    }
}

iter_liste_noeud :: corout(noeud : *r32) -> *r32
{
    nloc := noeud

    tantque nloc != nul {
        retiens nloc
        nloc += 1
    }
}

principale :: fonc () -> z32
{
    pour j, i dans découpe("Texte d'exemple où les mots sont coupés ") {
        imprime("Mot (%) : %\n", i, j)
    }

    pour j, i dans plage(0, 11, 1) {
        imprime("Valeur (%) : %\n", i, j)
    }

    n3 := Noeud( suiv = nul, val = 789 )
    n2 := Noeud( suiv = @n3, val = 456 )
    n1 := Noeud( suiv = @n2, val = 123 )

    pour n, i dans iter_liste_noeud(@n1) {
        imprime("Valeur (%) : %\n", i, n.val)
    }

    pour c, i dans accumule([1, 2, 3, 4, 5, 6, 7, 8]) {
        si i == 24 {
            arrête
        }

        imprime("Itération %, valeur = %\n", i, c)
    }

    retourne 0
}

