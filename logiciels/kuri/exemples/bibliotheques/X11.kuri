
#bibliothèque_dynamique "X11"

Display :: struct #externe;
_XEvent :: union externe nonsûr {
    type : z32
}

_XGC :: struct #externe;

// Window :: n64
// Drawable :: n64

DefaultGC :: fonc (ptr: *Display, s: z32) -> *_XGC #externe
XOpenDisplay :: fonc (ptr: *rien) -> *Display #externe
XCloseDisplay :: fonc (ptr: *Display) -> rien #externe
DefaultScreen :: fonc (ptr: *Display) -> z32 #externe

XCreateSimpleWindow :: fonc externe(
    display: *Display,
    parent: n64,
    x: z32,
    y: z32,
    largeur: n32,
    hauteur: n32,
    largeur_bordure: n32,
    bordure: n64,
    arrière_plan: n64) -> n64

RootWindow :: fonc (display: *Display, parent: n64) -> n64 #externe
BlackPixel :: fonc (ptr: *Display, s: z32) -> n64 #externe
WhitePixel :: fonc (ptr: *Display, s: z32) -> n64 #externe
XSelectInput :: fonc (ptr: *Display, w: n64, a: z64) -> z32 #externe
XMapWindow :: fonc (ptr: *Display, w: n64) -> z32 #externe
XNextEvent :: fonc (display: *Display, event: *_XEvent) -> z32 #externe

XDrawString :: fonc (
    display: *Display,
    d: n64,
    gc: *_XGC,
    x: z32,
    y: z32,
    string: *z8,
    longueur: z32) -> z32 #externe

XFillRectangle :: fonc (
    display: *Display,
    d: n64,
    gc: *_XGC,
    x: z32,
    y: z32,
    largeur: z32,
    hauteur: z32) -> z32 #externe

// ----------------------------------------------------------------------------

principale :: fonc () -> z32
{
	diffère {
	    imprime("Fin du programme, mémoire utilisée : %o\n", mémoire_utilisée())
	}

    _ExposureMask := 1 << 15
    _KeyPressMask := 1 << 0

    _KeyPress := 2
    _Expose := 12

    msg := "Hello, World!";

    d := XOpenDisplay(nul);

    si d == nul {
        imprime("Impossible d'ouvrir un display !\n")
        retourne 1
    }

    hauteur : n32 = 640
    largeur : n32 = 480
    largeur_bordure : n32 = 1

    s := DefaultScreen(d);
    w := XCreateSimpleWindow(d, RootWindow(d, s comme n64), 10, 10, hauteur, largeur, largeur_bordure,
                           BlackPixel(d, s), WhitePixel(d, s));

    XSelectInput(d, w, _ExposureMask | _KeyPressMask);
    XMapWindow(d, w);

    e : _XEvent

    boucle {
        XNextEvent(d, @e)

        si e.type == _Expose {
            XFillRectangle(d, w, DefaultGC(d, s), 20, 20, 10, 10);
            XDrawString(d, w, DefaultGC(d, s), 10, 50, msg.pointeur, msg.taille comme z32);
        }

        si e.type == _KeyPress {
            arrête
        }
    }

    XCloseDisplay(d);

    retourne 0
}
