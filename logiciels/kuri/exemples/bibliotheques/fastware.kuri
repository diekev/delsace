optionel :: fonc(drapeau : bool, valeur : n32) -> n32
{
	retourne -drapeau comme n32 & valeur;
}

// opérateur ternaire sans branche : si drapeau est vrai retourne v1, sinon v2
ternaire :: fonc(drapeau : bool, v1 : n32, v2 : n32) -> n32
{
	retourne (-drapeau comme n32 & v1)
	         | ((drapeau comme n32 - 1) & v2);
}

// retourne les 4 valeurs minimales d'un tableau
min4 :: fonc(p : []r64) -> rien
{
	q := p.longueur / 4;
	q2 := q + q;

	chac i dans q...(q2 - 1) {
		m0 := i - optionel(p[i - q] <= p[i], q);
		m1 := i + q - optionel(p[i + q2] < p[i + q], q);
		échange(*p[i - q], *p[p[m0] <= p[m1] ? m0 : m1]);
	}
}
