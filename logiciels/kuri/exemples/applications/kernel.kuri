// Code des différentes couleurs pouvant être utilisées pour afficher du
// texte à l'écran. Chaque octet du tampon de la mémoire vidéo destiné à
// la couleur est divisé en deux valeurs hexadécimal, la première définie
// l'arrière-plan, et la deuxième le texte.
// Par exemple 0x07 représente un écran noir avec un texte gris clair.
// Les valeurs sont « répétées » pour pouvoir écrire
// AP_NOIR | TE_GRIS_CLAIR au lieu de (NOIR << 4) | GRIS_CLAIR.
{ :: énum
	// Arrière-Plan
	AP_NOIR          := 0x00
	AP_BLEU          := 0x10
	AP_VERT          := 0x20
	AP_CYAN          := 0x30
	AP_ROUGE         := 0x40
	AP_MAGENTA       := 0x50
	AP_BRUN          := 0x60
	AP_GRIS_CLAIR    := 0x70
	AP_GRIS_FONCE    := 0x80
	AP_BLUE_CLAIR    := 0x90
	AP_VERT_CLAIR    := 0xA0
	AP_CYAN_CLAIR    := 0xB0
	AP_ROUGE_CLAIR   := 0xC0
	AP_MAGENTA_CLAIR := 0xD0
	AP_BRUN_CLAIR    := 0xE0
	AP_BLANC         := 0xF0

	// Texte
	TE_NOIR          := 0x00
	TE_BLEU          := 0x01
	TE_VERT          := 0x02
	TE_CYAN          := 0x03
	TE_ROUGE         := 0x04
	TE_MAGENTA       := 0x05
	TE_BRUN          := 0x06
	TE_GRIS_CLAIR    := 0x07
	TE_GRIS_FONCE    := 0x08
	TE_BLUE_CLAIR    := 0x09
	TE_VERT_CLAIR    := 0x0A
	TE_CYAN_CLAIR    := 0x0B
	TE_ROUGE_CLAIR   := 0x0C
	TE_MAGENTA_CLAIR := 0x0D
	TE_BRUN_CLAIR    := 0x0E
	TE_BLANC         := 0x0F
}

Kernel :: struct {
	ptr_vidéo : *z8;
}

clarifie_écran :: fonc(dyn ptr_vidéo : *z8) -> rien
{
	// Cette boucle clarifie l'écran.
	// Il y a 25 lignes de 80 colonnes.
	// Chaque élément prend 2 octets.
	pour j dans 0...(80 * 25 * 2) {
		// Caractère blanc
		ptr_vidéo[j * 2] = ' ';

		// Octet d'attribut - écran noir.
		ptr_vidéo[j * 2 + 1] = transtype(AP_NOIR | TE_NOIR : z8);
	}

	retourne;
}

écris_chaîne :: fonc(dyn ptr_vidéo : *z8, chaine : *z8) -> rien
{
	dyn i := 0;
	dyn j := 0;

	// Cette boucle écris la chaine à la mémoire vidéo.
	boucle {
		si chaine[j] == '\0' {
			arrête;
		}

		// le caractère ascii.
		ptr_vidéo[i] = chaine[j];

		// Octet d'attribut - gris clair sur écran noir.
		ptr_vidéo[i + 1] = transtype(AP_NOIR | TE_GRIS_CLAIR : z8);

		i = i + 2;
		j = j + 1;
	}

	retourne;
}

principale :: fonc() -> z32
{
	// En mode protégé, la mémoire vidéo démarre à l'addresse 0xb8000
	ptr_vidéo := transtype(0xb8000 : *z8);

	clarifie_écran(ptr_vidéo);

	chaine := "mon premier kernel";

	écris_chaîne(ptr_vidéo, chaine);

	boucle {}

	retourne 0;
}
