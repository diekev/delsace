importe Fondation
importe Tori // pour imprime_json
importe JSON

// -----------------------------------

test_json_tori :: fonc () -> rien
{
    diffère { imprime_sans_format("mémoire utilisée : ", mémoire_utilisée(), "o\n") }

    chn := "{ \"nom\" : \"dietrich\", \"prénom\" : \"kévin\", \"âge\": 28, \"taille\": 1.73 }"

    imprime("script :\n\n", chn, "\n\n")

    // -----------------------------------
    // Lexage du script

    lexeuse := construit_lexeuse(chn)
    diffère { détruit_lexeuse(lexeuse); }

    lexeuse.performe_lexage()

    imprime("lexèmes :\n\n")

    pour données dans lexeuse.lexèmes {
        imprime_sans_format(données.lexème, "\n")
    }

    imprime("\n")

    // -----------------------------------
    // Syntaxage du script, création de l'objet

	syntaxeuse : Syntaxeuse
	syntaxeuse.lexèmes = lexeuse.lexèmes
    diffère { détruit(syntaxeuse); }

	syntaxeuse.lance_analyse()

	imprime("JSON :\n\n")

    si syntaxeuse.assembleuse.pile.est_vide() {
        imprime_sans_format("La pile est vide...\n")
    }
    sinon {
        racine := syntaxeuse.assembleuse.pile.haut()
        imprime_json(racine, 0)
    }

	imprime("\n")
}

// -----------------------------------

// À FAIRE : comment déterminer si une valeur est manquante ?
InformationConnexion :: struct {
    email := "une_première_addresse@courriel.fr"
    mot_de_passe := "L3Dfs_BaJRufF5!P"
    age := 56
}

InformationInscription :: struct {
    nom := ""
    prénom := ""
    email := ""
    mot_de_passe := ""
}

principale :: fonc () : z32
{
    info : InformationConnexion

    chn := chaine_json_depuis_struct(info)
    diffère { déloge chn; }

    imprime("JSON : %\n", chn)

    info.email = "une_autre_addresse@courriel.fr"
    info.mot_de_passe = "LkD34qdIFa0S"
    info.age = 78

    imprime("%\n", info)

    remplis_struct_depuis_json(chn, info)

    //chaine_json_depuis_objet_tori()
    //objet_tori_depuis_json()

    imprime("%\n", info)

    retourne 0
}
