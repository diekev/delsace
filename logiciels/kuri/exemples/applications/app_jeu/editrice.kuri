énum type_éditrice {
	NULLE     := 0
	PROPRIETE := 1
	TEMPS     := 2
}

struct vec2d {
	x : r32
	y : r32
}

struct rect2d {
	pos : vec2d
	taille : vec2d
}

struct Editrice {
	nom : chaîne
	type : type_éditrice

	rect_abs : vec2d # rectangle en coordonnées pixel
	rect_rel : vec2d # rectangle en coordonnées normalisées
}

fonction cree_editrice(type : type_éditrice) : Editrice
{
	dyn éditrice := loge Editrice
	éditrice.type = type

	discr type {
		NULLE {
			éditrice.nom = "nulle"
		}
		PROPRIETE {
			éditrice.nom = "propriété"
		}
		TEMPS {
			éditrice.nom = "temps"
		}
	}

	retourne éditrice
}

fonction ajoute_editrice(editrices : *tableau, type : type_éditrice) : Editrice
{
	dyn editrice := cree_editrice(type)

	pousse_tableau(editrices, editrice)

	# initialise la taille de l'éditrice selon sa position

	retourne editrice
}

fonction enlève_editrice(editrices : *tableau, editrice : *Editrice) : rien
{
	# trouve l'index de l'éditrice dans le tableau
	index := tableau.taille

	pour i dans 0 ... tableau.taille - 1 {
		dyn ed : *Editrice
		valeur_tableau(editrices, i)
	}

	# supprime à l'index
}

# editrice gauche-droite-haut-bas
fonction divise_editrice(editrice : *Editrice) : bool
{
	gauche := editrice.gauche
	droite := editrice.droite
	haut   := editrice.haut
	bas    := editrice.bas

	si gauche == droite == haut == bas == nul {
		retourne vrai
	}

	# trouve s'il est possible de diviser l'éditrice

	retourne vrai
}
