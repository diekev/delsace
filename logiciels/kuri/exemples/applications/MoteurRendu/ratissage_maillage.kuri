importe Couleur
importe Fondation
importe Math
importe Image
importe Triage

// --------------------------------------------------------------

initialise_moteur_rendu_ratissage :: fonc (moteur: *MoteurRendu)
{
    moteur.rends = rends_ratissage
}

// --------------------------------------------------------------

rends_ratissage :: fonc (moteur: *MoteurRendu, image: *Image.Image)
{
    caméra := moteur.caméra
    maillage := moteur.maillage
    mat_obj := maillage.matrice

    contexte_temp := contexte()
    contexte_temp.allocatrice = __stockage_temporaire

    monde_vers_caméra := caméra.monde_vers_caméra
    caméra_vers_rateau := caméra.caméra_vers_rateau
    monde_vers_rateau := caméra.monde_vers_rateau

    données_nuançage: DonnéesPourNuançage
    données_nuançage.matcap = moteur.matcap
    données_nuançage.direction_vue = caméra.direction_vue

    // élimine les triangles invisibles
    triangles_visible : []Triangle

    pour tri dans maillage.tris {
        tri_transformé := transforme(mat_obj, tri)
        nor := calcul_normal(tri_transformé)

        // exclus le triangle s'il n'est pas visible
        si nor.z >= 0.0 {
            continue
        }

        dir_caméra := tri_transformé.p0 - caméra.position

        cos_angle := produit_scalaire(vec_depuis_nor(nor), dir_caméra)

        si cos_angle >= 0.0 {
            continue
        }

        pousse_contexte contexte_temp {
            tableau_ajoute(*triangles_visible, tri_transformé)
        }
    }

    // tri des triangles pour les ordonner selon la distance à la caméra
    tri_par_sélection(triangles_visible, compare_triangles_selon_axe_z)

    pour tri dans triangles_visible {
        données_nuançage.normal = calcul_normal_normalisé(tri)
        couleur := moteur.nuanceur(données_nuançage)

        tri_projeté := transforme(monde_vers_rateau, tri)

        ratisse_triangle(
            image,
            tri_projeté.p0.x,
            tri_projeté.p0.y,
            tri_projeté.p1.x,
            tri_projeté.p1.y
            tri_projeté.p2.x,
            tri_projeté.p2.y,
            couleur);
    }
}
