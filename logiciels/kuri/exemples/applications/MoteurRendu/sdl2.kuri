// Interface pour la bibliothèque SDL2

#inclus "SDL2/SDL.h"

#bib "SDL2"

DrapeauxInit :: énum_drapeau n32 {
    SDL_INIT_TIMER := transtype(0x00000001: n32)
    SDL_INIT_AUDIO := transtype(0x00000010: n32)
    SDL_INIT_VIDEO := transtype(0x00000020: n32)
    SDL_INIT_JOYSTICK := transtype(0x00000200: n32)
    SDL_INIT_HAPTIC := transtype(0x00001000: n32)
    SDL_INIT_GAMECONTROLLER := transtype(0x00002000: n32)
    SDL_INIT_EVENTS := transtype(0x00004000: n32)
    SDL_INIT_EVERYTHING := SDL_INIT_TIMER | SDL_INIT_AUDIO | SDL_INIT_VIDEO | SDL_INIT_EVENTS |
                SDL_INIT_JOYSTICK | SDL_INIT_HAPTIC | SDL_INIT_GAMECONTROLLER
}

SDL_Init :: fonc externe (flahs: DrapeauxInit) -> rien
SDL_Delay :: fonc externe (time: z32) -> rien
SDL_Quit :: fonc externe () -> rien

SDL_GLattr :: énum z32 {
    SDL_GL_RED_SIZE
    SDL_GL_GREEN_SIZE
    SDL_GL_BLUE_SIZE
    SDL_GL_ALPHA_SIZE
    SDL_GL_BUFFER_SIZE
    SDL_GL_DOUBLEBUFFER
    SDL_GL_DEPTH_SIZE
    SDL_GL_STENCIL_SIZE
    SDL_GL_ACCUM_RED_SIZE
    SDL_GL_ACCUM_GREEN_SIZE
    SDL_GL_ACCUM_BLUE_SIZE
    SDL_GL_ACCUM_ALPHA_SIZE
    SDL_GL_STEREO
    SDL_GL_MULTISAMPLEBUFFERS
    SDL_GL_MULTISAMPLESAMPLES
    SDL_GL_ACCELERATED_VISUAL
    SDL_GL_RETAINED_BACKING
    SDL_GL_CONTEXT_MAJOR_VERSION
    SDL_GL_CONTEXT_MINOR_VERSION
    SDL_GL_CONTEXT_EGL
    SDL_GL_CONTEXT_FLAGS
    SDL_GL_CONTEXT_PROFILE_MASK
    SDL_GL_SHARE_WITH_CURRENT_CONTEXT
    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR
    SDL_GL_CONTEXT_RESET_NOTIFICATION
    SDL_GL_CONTEXT_NO_ERROR
}

SDL_WindowFlags :: énum_drapeau n32 {
    SDL_WINDOW_FULLSCREEN := 0x00000001
    SDL_WINDOW_OPENGL := 0x00000002
    SDL_WINDOW_SHOWN := 0x00000004
    SDL_WINDOW_HIDDEN := 0x00000008
    SDL_WINDOW_BORDERLESS := 0x00000010
    SDL_WINDOW_RESIZABLE := 0x00000020
    SDL_WINDOW_MINIMIZED := 0x00000040
    SDL_WINDOW_MAXIMIZED := 0x00000080
    SDL_WINDOW_INPUT_GRABBED := 0x00000100
    SDL_WINDOW_INPUT_FOCUS := 0x00000200
    SDL_WINDOW_MOUSE_FOCUS := 0x00000400
    SDL_WINDOW_FULLSCREEN_DESKTOP := ( SDL_WINDOW_FULLSCREEN | transtype(0x00001000: n32) )
    SDL_WINDOW_FOREIGN := 0x00000800
    SDL_WINDOW_ALLOW_HIGHDPI := 0x00002000
    SDL_WINDOW_MOUSE_CAPTURE := 0x00004000
    SDL_WINDOW_ALWAYS_ON_TOP := 0x00008000
    SDL_WINDOW_SKIP_TASKBAR  := 0x00010000
    SDL_WINDOW_UTILITY       := 0x00020000
    SDL_WINDOW_TOOLTIP       := 0x00040000
    SDL_WINDOW_POPUP_MENU    := 0x00080000
    SDL_WINDOW_VULKAN        := 0x10000000
}

SDL_GL_SetAttribute :: fonc externe (attr: SDL_GLattr, value: z64) -> z32

SDL_Window :: struct externe

SDL_CreateWindow :: fonc externe (
        title : *z8,
        x : z32,
        y : z32,
        w : z32,
        h : z32,
        flags : SDL_WindowFlags) -> *SDL_Window

SDL_Event :: union externe nonsûr {
    type : n32
}

SDL_PollEvent :: fonc externe (event: *SDL_Event) -> z32
SDL_WaitEvent :: fonc externe (event: *SDL_Event) -> z32

// SDL_GLContext :: *rien

SDL_GL_CreateContext :: fonc externe (window: *SDL_Window) -> *rien
SDL_GL_SwapWindow :: fonc externe (window: *SDL_Window) -> rien
SDL_GL_DeleteContext :: fonc externe (contexte: *rien) -> rien