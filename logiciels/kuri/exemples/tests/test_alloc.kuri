importe Fondation

fonc test_alloc_scalaire() -> rien
{
    imprime("test_alloc_scalaire\n")
    dyn a := loge z32
    imprime("scalaire logée : ", a, '\n')

    mémoire(a) = 5
    imprime("valeur scalaire : ", mémoire(a), '\n')

    reloge a : z32
    imprime("scalaire relogée : ", a, '\n')
    imprime("valeur scalaire : ", mémoire(a), '\n')
    déloge a
    imprime("scalaire délogée : ", a, '\n')
}

fonc test_alloc_chaine() -> rien
{
    imprime("test_alloc_chaine\n")
    dyn chn := loge chaine(1024)
    imprime("chaine logée : ", chn.pointeur, '\n')
    reloge chn : chaine(2048)
    imprime("chaine relogée : ", chn.pointeur, '\n')
    déloge chn
    imprime("chaine délogée : ", chn.pointeur, '\n')
}

fonc pousse(dyn tabl : &[]z32, valeur : z32) -> rien
{
    taille := tabl.taille
    reloge tabl: [taille + 1]z32
    tabl[taille] = valeur
}

fonc test_alloc_tableau() -> rien
{
    imprime("test_alloc_tableau\n")
    dyn tabl := loge [1024]z32
    imprime("tableau logé : ", tabl.pointeur, '\n')

    imprime("taille tableau : ", tabl.taille, '\n')
    pousse(tabl, 5)
    imprime("taille tableau : ", tabl.taille, '\n')

    reloge tabl : [1024]z32
    imprime("tableau relogé : ", tabl.pointeur, '\n')
    déloge tabl
    imprime("tableau délogé : ", tabl.pointeur, '\n')
}

fonc principale(args : []*z8) -> z32
{
    test_alloc_scalaire()
    test_alloc_chaine()
    test_alloc_tableau()
    retourne 0
}
