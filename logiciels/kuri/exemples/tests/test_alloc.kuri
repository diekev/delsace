importe Fondation

test_alloc_scalaire :: fonc() -> rien
{
    imprime("test_alloc_scalaire\n")
    a := loge z32
    imprime("scalaire logée : %\n", a)

    mémoire(a) = 5
    imprime("valeur scalaire : %\n", mémoire(a))

    reloge a : z32
    imprime("scalaire relogée : %\n", a)
    imprime("valeur scalaire : %\n", mémoire(a))
    déloge a
    imprime("scalaire délogée : %\n", a)
}

test_alloc_chaine :: fonc() -> rien
{
    imprime("test_alloc_chaine\n")
    chn := loge chaine(1024)
    imprime("chaine logée : %\n", chn.pointeur)
    reloge chn : chaine(2048)
    imprime("chaine relogée : %\n", chn.pointeur)
    déloge chn
    imprime("chaine délogée : %\n", chn.pointeur)
}

test_alloc_tableau :: fonc() -> rien
{
    imprime("test_alloc_tableau\n")
    tabl := loge [1024]z32
    imprime("tableau logé : %\n", tabl.pointeur)

    imprime("taille tableau : %\n", tabl.taille)
    tableau_ajoute(@tabl, 5)
    imprime("taille tableau : %\n", tabl.taille)

    reloge tabl : [1024]z32
    imprime("tableau relogé : %\n", tabl.pointeur)
    déloge tabl
    imprime("tableau délogé : %\n", tabl.pointeur)
}

principale :: fonc () -> z32
{
    test_alloc_scalaire()
    test_alloc_chaine()
    test_alloc_tableau()
    retourne 0
}
