importe Fondation

test_alloc_scalaire :: fonc() -> rien
{
    imprime_sans_format("test_alloc_scalaire\n")
    dyn a := loge z32
    imprime_sans_format("scalaire logée : ", a, '\n')

    mémoire(a) = 5
    imprime_sans_format("valeur scalaire : ", mémoire(a), '\n')

    reloge a : z32
    imprime_sans_format("scalaire relogée : ", a, '\n')
    imprime_sans_format("valeur scalaire : ", mémoire(a), '\n')
    déloge a
    imprime_sans_format("scalaire délogée : ", a, '\n')
}

test_alloc_chaine :: fonc() -> rien
{
    imprime_sans_format("test_alloc_chaine\n")
    dyn chn := loge chaine(1024)
    imprime_sans_format("chaine logée : ", chn.pointeur, '\n')
    reloge chn : chaine(2048)
    imprime_sans_format("chaine relogée : ", chn.pointeur, '\n')
    déloge chn
    imprime_sans_format("chaine délogée : ", chn.pointeur, '\n')
}

test_alloc_tableau :: fonc() -> rien
{
    imprime_sans_format("test_alloc_tableau\n")
    dyn tabl := loge [1024]z32
    imprime_sans_format("tableau logé : ", tabl.pointeur, '\n')

    imprime_sans_format("taille tableau : ", tabl.taille, '\n')
    tableau_ajoute(@tabl, 5)
    imprime_sans_format("taille tableau : ", tabl.taille, '\n')

    reloge tabl : [1024]z32
    imprime_sans_format("tableau relogé : ", tabl.pointeur, '\n')
    déloge tabl
    imprime_sans_format("tableau délogé : ", tabl.pointeur, '\n')
}

principale :: fonc () -> z32
{
    test_alloc_scalaire()
    test_alloc_chaine()
    test_alloc_tableau()
    retourne 0
}
