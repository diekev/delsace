// application test pour comprendre comme fonctionne les scripts CGI pour Apache (ou autre)

importe Fondation
importe POSIX
importe Routage

/*
DOCUMENT_ROOT	The root directory of your server
HTTP_COOKIE	The visitor's cookie, if one is set
HTTP_HOST	The hostname of the page being attempted
HTTP_REFERER	The URL of the page that called your program
HTTP_USER_AGENT	The browser type of the visitor
HTTPS	"on" if the program is being called through a secure server
PATH	The system path your server is running under
QUERY_STRING	The query string (see GET, below)
REMOTE_ADDR	The IP address of the visitor
REMOTE_HOST	The hostname of the visitor (if your server has reverse-name-lookups on; otherwise this is the IP address again)
REMOTE_PORT	The port the visitor is connected to on the web server
REMOTE_USER	The visitor's username (for .htaccess-protected pages)
REQUEST_METHOD	GET or POST
REQUEST_URI	The interpreted pathname of the requested document or CGI (relative to the document root)
SCRIPT_FILENAME	The full pathname of the current CGI
SCRIPT_NAME	The interpreted pathname of the current CGI (relative to the document root)
SERVER_ADMIN	The email address for your server's webmaster
SERVER_NAME	Your server's fully qualified domain name (e.g. www.cgi101.com)
SERVER_PORT	The port number your server is listening on
SERVER_SOFTWARE	The server software you're using (e.g. Apache 1.3)
*/

get_page_acceuil :: fonc () -> rien
{
    imprime("Status: 200 OK\n")
    imprime("Content-Type: text/html;charset=utf-8\n\n")
    imprime("<p>Bùschùr, b'sàmme!</p>")
}

get_page_méthode_non_autorisée :: fonc () -> rien
{
    imprime("Status: 401 Method Not Allowed\n\n")
}

get_page_non_trouvée :: fonc () -> rien
{
    imprime("Status: 404 Not Found\n")
    imprime("Content-Type: text/html;charset=utf-8\n\n")
    imprime("<h1>Page non trouvée !</h1>")
}

principale :: fonc () -> z32
{
    chaine_requête := chaine_environnement("QUERY_STRING")
    chaine_méthode := chaine_environnement("REQUEST_METHOD")
    chaine_uri := chaine_environnement("REQUEST_URI")
    adresse_ip := chaine_environnement("REMOTE_ADDR")

    routeuse : Routeuse
    routeuse.rappel_méthode_non_autorisée = get_page_méthode_non_autorisée
    routeuse.rappel_page_non_trouvée = get_page_non_trouvée
    diffère { détruit_routeuse(@routeuse) }

    ajoute_route(@routeuse, "/", get_page_acceuil, nul)

    apparie_route(@routeuse, chaine_uri, chaine_méthode)

    retourne 0
}
