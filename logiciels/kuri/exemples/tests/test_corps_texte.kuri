importe Fondation

ajoute :: fonc (a: z32, b: z32) -> z32
#corps_texte {
    retourne copie_chaine("retourne a + b")
}

ajoute_poly :: fonc (a: $T, b: T) -> T
#corps_texte {
    retourne copie_chaine("retourne a + b")
}

test_ajoute :: fonc ()
{
    a := ajoute(5, 6)
    b := ajoute_poly(7.5, 11.2)

    imprime("a: %\n", a)
    imprime("b: %\n", b)
}

Vecteur :: struct ($T: type_de_donn√©es) #corps_texte {
    retourne copie_chaine("x: T; y: T; z: T;")
}

init_vecteur :: fonc ()
{
    v : Vecteur(T = z32) = ---
    v.x = 0
    v.y = 1
    v.z = 2

    imprime("v : %\n", v)
}

principale :: fonc ()
#corps_texte {
    retourne copie_chaine("/* init_vecteur(); */ test_ajoute();")
}
