// ADN pour les Messages.
// Les messages sont directement passés par pointeurs aux métaprogrammes sans conversion au préalable.

énum GenreMessage {
    @code GenreMessage

    INVALIDE
    FICHIER_OUVERT
    FICHIER_FERMÉ
    MODULE_OUVERT
    MODULE_FERMÉ
    TYPAGE_CODE_TERMINÉ
    PHASE_COMPILATION
}

énum PhaseCompilation {
    @code PhaseCompilation

	PARSAGE_EN_COURS
	PARSAGE_TERMINÉ
	TYPAGE_TERMINÉ
	GÉNÉRATION_CODE_TERMINÉE
	AVANT_GÉNÉRATION_OBJET
	APRÈS_GÉNÉRATION_OBJET
	AVANT_LIAISON_EXÉCUTABLE
	APRÈS_LIAISON_EXÉCUTABLE
	COMPILATION_TERMINÉE
}

struct Message {
    @code Message

    GenreMessage genre [code]
	EspaceDeTravail * espace [code]
}

struct MessageFichier : Message {
    @code MessageFichier

    chemin: chaine [code]
}

struct MessageModule : Message {
    @code MessageModule

    chemin: chaine [code]
    module: *Module [code]
}

struct MessageTypageCodeTerminé : Message {
    @code MessageTypageCodeTerminé

    code : *NoeudCode [code]
}

struct MessagePhaseCompilation : Message {
    @code MessagePhaseCompilation

	phase : PhaseCompilation [code]
}
