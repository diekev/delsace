#!si vrai
fonc principale(compte : n32, arguments : []*n8) : n32
{
	soit x = 2;
	soit y = 5;
	soit w = transtype(0 : n32);
	x = y + 2 * 3;
	retourne x;
}
#!sinon
fonc multiplier(a : n32, b : n32) : n32
{
	retourne a * b;
}

fonc diviser(a : n32, b : n32) : n32
{
	retourne a / b;
}

fonc soustraire(a : n32, b : n32) : n32
{
	retourne a - b;
}

fonc additioner(a : n32, b : n32) : n32
{
	retourne a + b;
}

fonc multiplier_r64(a : r64, b : r64) : r64
{
	retourne a * b;
}

fonc diviser_r64(a : r64, b : r64) : r64
{
	retourne a / b;
}

fonc soustraire_r64(a : r64, b : r64) : r64
{
	retourne a - b;
}

fonc additioner_r64(a : r64, b : r64) : r64
{
	retourne a + b;
}

fonc multiplier_r32(a : r32, b : r32) : r32
{
	retourne a * b;
}

fonc diviser_r32(a : r32, b : r32) : r32
{
	retourne a / b;
}

fonc soustraire_r32(a : r32, b : r32) : r32
{
	retourne a - b;
}

fonc additioner_r32(a : r32, b : r32) : r32
{
	retourne a + b;
}

fonc multiplier_r16(a : r16, b : r16) : r16
{
	retourne a * b;
}

fonc diviser_r16(a : r16, b : r16) : r16
{
	retourne a / b;
}

fonc soustraire_r16(a : r16, b : r16) : r16
{
	retourne a - b;
}

fonc additioner_r16(a : r16, b : r16) : r16
{
	retourne a + b;
}

fonc multiplier_e16(a : e16, b : e16) : e16
{
	retourne a * b;
}

fonc diviser_e16(a : e16, b : e16) : e16
{
	retourne a / b;
}

fonc soustraire_e16(a : e16, b : e16) : e16
{
	retourne a - b;
}

fonc additioner_e16(a : e16, b : e16) : e16
{
	retourne a + b;
}

fonc multiplier_e8(a : e8, b : e8) : e8
{
	retourne a * b;
}

fonc diviser_e8(a : e8, b : e8) : e8
{
	retourne a / b;
}

fonc soustraire_e8(a : e8, b : e8) : e8
{
	retourne a - b;
}

fonc additioner_e8(a : e8, b : e8) : e8
{
	retourne a + b;
}

fonc multiplier_e64(a : e64, b : e64) : e64
{
	retourne a * b;
}

fonc diviser_e64(a : e64, b : e64) : e64
{
	retourne a / b;
}

fonc soustraire_e64(a : e64, b : e64) : e64
{
	retourne a - b;
}

fonc additioner_e64(a : e64, b : e64) : e64
{
	retourne a + b;
}

fonc ne_fais_rien() : rien
{
	retourne;
}

fonc principale(compte : n32, arguments : []*e8) : n32
{
	ne_fais_rien();
	soit y = 9;
	soit cha√Æne = "Salut, tout le monde !";
	#soit w = transtype(arguments : *e8);
	soit z : *e8 = arguments;
	soit x : n32 = additioner(b=5, a=multiplier(y, 8 + 3));
	x = 5 + 2 * 3;
	retourne x;
}
#!finsi
